<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.824" tests="107" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="gnome"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/raimund/git/finnmath/core/target/test-classes:/home/raimund/git/finnmath/core/target/classes:/home/raimund/.m2/repository/ch/obermuhlner/big-math/1.3.0/big-math-1.3.0.jar:/home/raimund/.m2/repository/com/google/guava/guava/23.5-jre/guava-23.5-jre.jar:/home/raimund/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/raimund/.m2/repository/org/checkerframework/checker-qual/2.0.0/checker-qual-2.0.0.jar:/home/raimund/.m2/repository/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/home/raimund/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/raimund/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/raimund/.m2/repository/org/apache/commons/commons-lang3/3.7/commons-lang3-3.7.jar:/home/raimund/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/raimund/.m2/repository/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar:/home/raimund/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/raimund/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/raimund/.m2/repository/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar:/home/raimund/.m2/repository/org/assertj/assertj-guava/3.1.0/assertj-guava-3.1.0.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk/jre/lib/amd64"/>
    <property name="sun.java.command" value="/home/raimund/git/finnmath/core/target/surefire/surefirebooter1354846831816943154.jar /home/raimund/git/finnmath/core/target/surefire 2017-12-23T19-47-06_675-jvmRun1 surefire2625236118736408092tmp surefire_03784596663335593008tmp"/>
    <property name="surefire.test.class.path" value="/home/raimund/git/finnmath/core/target/test-classes:/home/raimund/git/finnmath/core/target/classes:/home/raimund/.m2/repository/ch/obermuhlner/big-math/1.3.0/big-math-1.3.0.jar:/home/raimund/.m2/repository/com/google/guava/guava/23.5-jre/guava-23.5-jre.jar:/home/raimund/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/raimund/.m2/repository/org/checkerframework/checker-qual/2.0.0/checker-qual-2.0.0.jar:/home/raimund/.m2/repository/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/home/raimund/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/raimund/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/raimund/.m2/repository/org/apache/commons/commons-lang3/3.7/commons-lang3-3.7.jar:/home/raimund/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/raimund/.m2/repository/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar:/home/raimund/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/raimund/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/raimund/.m2/repository/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar:/home/raimund/.m2/repository/org/assertj/assertj-guava/3.1.0/assertj-guava-3.1.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/raimund"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk/jre"/>
    <property name="basedir" value="/home/raimund/git/finnmath/core"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/home/raimund/git/finnmath/core/target/surefire/surefirebooter1354846831816943154.jar:/home/raimund/.m2/repository/org/jacoco/org.jacoco.agent/0.7.9/org.jacoco.agent-0.7.9-runtime.jar"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_144-b01"/>
    <property name="user.name" value="raimund"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="4.14.8-1-ARCH"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/raimund/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_144"/>
    <property name="user.dir" value="/home/raimund/git/finnmath/core"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.144-b01"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="euclideanDistanceShouldBePositive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0"/>
  <testcase name="euclideanDistancePow2FromVectorToSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.004"/>
  <testcase name="maxDistanceFromVectorToSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.011"/>
  <testcase name="addShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.015"/>
  <testcase name="scalarMultiplyShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.017"/>
  <testcase name="euclideanDistanceWithPrecisionShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.008"/>
  <testcase name="subtractShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.004"/>
  <testcase name="toStringShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="maxDistanceNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="taxicabNormShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="euclideanNormPrecisionTooLowShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormPrecisionNullAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.009"/>
  <testcase name="taxicabNormShouldBeAbsolutelyHomogeneous" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.019"/>
  <testcase name="dotProductSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="euclideanDistanceSizesNotEqualWithPrecisionAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="dotProductShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.004"/>
  <testcase name="euclideanDistancePrecisionTooLowShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormPow2NormShouldBeHomogeneous" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.005"/>
  <testcase name="scalarMultiplyNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0"/>
  <testcase name="addAndScalarMultiplyWithTwoScalarsShouldBeDistributive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.034"/>
  <testcase name="euclideanDistanceWithPrecisionAndScaleAndRoundingModeShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.012"/>
  <testcase name="elementShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="maxNormShouldBePositive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="equalsNotSimpleComplexNumberVectorShouldReturnFalse" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0"/>
  <testcase name="taxicabNormShouldBePositive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="euclideanDistanceWithPrecisionNullAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.003"/>
  <testcase name="scalarMultiplyWithMinusOneShouldBeEqualToNegated" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="elementNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanDistancePow2NullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="maxNormShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.017"/>
  <testcase name="taxicabNormZeroVectorShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanDistancePow2ShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.014"/>
  <testcase name="taxicabDistanceSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="equalsSelfShouldReturnTrue" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.003"/>
  <testcase name="addShouldBeCommutative" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.003"/>
  <testcase name="euclideanNormShouldBePositive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="euclideanNormPow2ZeroVectorShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0"/>
  <testcase name="dotProductNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="negateZeroMatrixShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0"/>
  <testcase name="entriesShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceShouldBeSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.013"/>
  <testcase name="equalsEqualShouldReturnTrue" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="elementIndexOutOfBoundShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="hashCodeShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.003"/>
  <testcase name="maxNormShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="addShouldBeAssociative" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.017"/>
  <testcase name="euclideanDistanceNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="scalarMultiplyWithZeroShouldBeEqualToZeroVector" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormWithScaleAndRoundingModeShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="euclideanDistanceNullWithScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="equalsNotEqualShouldReturnFalse" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="maxDistanceSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormWithPrecisionAndScaleAndRoundingModeShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="addSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="negateTwiceShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.006"/>
  <testcase name="euclideanDistancePrecisionNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="maxDistanceShouldBeSymmetric" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.01"/>
  <testcase name="maxNormShouldBeAbsolutelyHomogeneous" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.012"/>
  <testcase name="euclideanDistanceSizesNotEqualWithPrecisionShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="euclideanDistanceShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.005"/>
  <testcase name="euclideanDistanceSizesNotEqualWithScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="builderSizeTooLowShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormScaleTooLowAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceFromVectorToSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.003"/>
  <testcase name="addNegatedShouldBeEqualToZeroMatrix" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="scalarMultiplyWithTwoScalarsShouldBeAssociative" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.014"/>
  <testcase name="elementsShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="addNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0"/>
  <testcase name="maxDistanceShouldBePositive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.006"/>
  <testcase name="euclideanDistanceScaleToLowAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceWithScaleAndRoundingModeShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.004"/>
  <testcase name="maxDistanceShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.145"/>
  <testcase name="euclideanDistancePrecisionTooHighAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.004"/>
  <testcase name="euclideanNormPrecisionTooHighShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="addZeroVectorShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormPrecisionTooHighAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="subtractSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormScaleTooLowAndPrecisionAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="subtractZeroVectorShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceWithPrecisionAndScaleToLowAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.136"/>
  <testcase name="euclideanDistanceWithPrecisionTooLowAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="maxDistanceShouldBeSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.014"/>
  <testcase name="maxNormZeroVectorShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormPrecisionNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
  <testcase name="euclideanDistanceNullWithPrecisionShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormWithPrecisionShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.003"/>
  <testcase name="addAndScalarMultiplyWithTwoVectorsShouldBeDistributive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.024"/>
  <testcase name="euclideanNormPow2ShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceNullWithPrecisionAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.057"/>
  <testcase name="subtractNullShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceShouldBeSymmetric" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.009"/>
  <testcase name="negateShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="sizeShouldSucceed" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="taxicabNormShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.013"/>
  <testcase name="euclideanDistancePow2SizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanDistancePow2AbsShouldBeSymmetric" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="subtractSelfShouldBeEqualToZeroVector" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="euclideanNormPrecisionTooLowAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceShouldBePositive" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.006"/>
  <testcase name="euclideanDistancePrecisionTooHighShouldThrowException" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.001"/>
  <testcase name="scalarMultiplyWithOneShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.core.linear.SimpleComplexNumberVectorTest" time="0.002"/>
</testsuite>