<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" tests="57" skipped="0" failures="0" errors="0" timestamp="2017-10-14T21:28:12" hostname="archlinux" time="0.214">
  <properties/>
  <testcase name="conjugateShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="matrixShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.037"/>
  <testcase name="addShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.006"/>
  <testcase name="subtractShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.004"/>
  <testcase name="toStringShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.014"/>
  <testcase name="newImaginaryNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="powZeroShouldBeSameAsOne" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.008"/>
  <testcase name="divideShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.004"/>
  <testcase name="subtractZeroShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="invertSelfShouldBeEqualToOneDividedBySelf" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="multiplyOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="divideMinusOneShouldBeEqualToNegated" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="divideNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="powOfIForExponentNotEqualToZeroShouldBeEqualToMinusOne" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="powOfZeroForExponentNotEqualToZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="multiplyShouldBeCommutative" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="powNegativeExponentShouldThrowException" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="multiplyNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="newRealNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="absPow2MinusOneShouldBeSameAsOne" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="equalsSelfShouldReturnTrue" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="addShouldBeCommutative" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.003"/>
  <testcase name="equalsRealNotEqualShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="multiplyShouldBeAssociative" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.011"/>
  <testcase name="divideOneShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.006"/>
  <testcase name="equalsEqualShouldReturnTrue" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.006"/>
  <testcase name="addNegatedShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="hashCodeShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.004"/>
  <testcase name="addShouldBeAssociative" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.008"/>
  <testcase name="absPow2OneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="invertZeroShouldReturnAnEmptyOptional" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.005"/>
  <testcase name="negateTwiceShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.003"/>
  <testcase name="absShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.013"/>
  <testcase name="absPow2ZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="invertShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="addAndMultiplyShouldBeDistributive" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.011"/>
  <testcase name="subtractSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="divideZeroShouldThrowException" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="addNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="powOneShouldBeTheSame" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="invertibleZeroShouldBeFalse" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="addZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="multiplyShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="conjugateRealNumberShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="invertibleShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="invertibleShouldBePredictable" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="equalsNotSimpleComplexNumberShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="negateZeroShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="equalsImaginaryNotEqualShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="invertOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="powShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="multiplyMinusOneShouldBeEqualToNegated" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="subtractNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="multiplyZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.001"/>
  <testcase name="negateShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <testcase name="powOfOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.0"/>
  <testcase name="absPow2ShouldSucceed" classname="com.github.ltennstedt.finnmath.number.SimpleComplexNumberTest" time="0.002"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
