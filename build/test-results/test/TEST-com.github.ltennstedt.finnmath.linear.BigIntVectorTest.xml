<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" tests="107" skipped="0" failures="0" errors="0" timestamp="2017-10-14T21:28:18" hostname="archlinux" time="0.507">
  <properties/>
  <testcase name="euclideanDistanceShouldBePositive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.019"/>
  <testcase name="euclideanDistancePow2FromVectorToSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="maxDistanceFromVectorToSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="equalsNotBigIntVectorShouldReturnFalse" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="addShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.019"/>
  <testcase name="scalarMultiplyShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.015"/>
  <testcase name="euclideanDistanceWithPrecisionShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.015"/>
  <testcase name="subtractShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.012"/>
  <testcase name="toStringShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.006"/>
  <testcase name="maxDistanceNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="taxicabNormShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormPrecisionTooLowShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="euclideanNormPrecisionNullAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="taxicabDistanceNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="taxicabNormShouldBeAbsolutelyHomogeneous" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="dotProductSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceSizesNotEqualWithPrecisionAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="dotProductShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.007"/>
  <testcase name="euclideanDistancePrecisionTooLowShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormPow2NormShouldBeHomogeneous" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.005"/>
  <testcase name="scalarMultiplyNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="addAndScalarMultiplyWithTwoScalarsShouldBeDistributive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.044"/>
  <testcase name="euclideanDistanceWithPrecisionAndScaleAndRoundingModeShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.008"/>
  <testcase name="elementShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.004"/>
  <testcase name="maxNormShouldBePositive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="taxicabNormShouldBePositive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="euclideanDistanceWithPrecisionNullAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="scalarMultiplyWithMinusOneShouldBeEqualToNegated" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="elementNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanDistancePow2NullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="maxNormShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.005"/>
  <testcase name="taxicabNormZeroVectorShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="euclideanDistancePow2ShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.006"/>
  <testcase name="taxicabDistanceSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="equalsSelfShouldReturnTrue" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="addShouldBeCommutative" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="euclideanNormShouldBePositive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormPow2ZeroVectorShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="dotProductNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="negateZeroMatrixShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="entriesShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceShouldBeSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.004"/>
  <testcase name="scalarMultiplyWithZeroShouldBeEqualToZeroMatrix" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="equalsEqualShouldReturnTrue" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="elementIndexOutOfBoundShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="hashCodeShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="maxNormShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="addShouldBeAssociative" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.028"/>
  <testcase name="euclideanDistanceNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormWithScaleAndRoundingModeShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceNullWithScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="equalsNotEqualShouldReturnFalse" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="maxDistanceSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormWithPrecisionAndScaleAndRoundingModeShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="addSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="negateTwiceShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.008"/>
  <testcase name="euclideanDistancePrecisionNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="maxDistanceShouldBeSymmetric" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="maxNormShouldBeAbsolutelyHomogeneous" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="euclideanDistanceSizesNotEqualWithPrecisionShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.0"/>
  <testcase name="euclideanDistanceShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.006"/>
  <testcase name="euclideanDistanceSizesNotEqualWithScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="builderSizeTooLowShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.007"/>
  <testcase name="euclideanNormScaleTooLowAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceFromVectorToSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="addNegatedShouldBeEqualToZeroMatrix" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="euclideanDistanceSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="scalarMultiplyWithTwoScalarsShouldBeAssociative" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.015"/>
  <testcase name="elementsShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="addNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="maxDistanceShouldBePositive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.004"/>
  <testcase name="euclideanDistanceScaleToLowAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="euclideanDistanceWithScaleAndRoundingModeShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.005"/>
  <testcase name="maxDistanceShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.015"/>
  <testcase name="euclideanDistancePrecisionTooHighAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormPrecisionTooHighShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="addZeroVectorShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="euclideanNormPrecisionTooHighAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="subtractSizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="euclideanNormScaleTooLowAndPrecisionAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="subtractZeroVectorShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceWithPrecisionAndScaleToLowAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.015"/>
  <testcase name="euclideanDistanceWithPrecisionTooLowAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="maxDistanceShouldBeSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="maxNormZeroVectorShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormPrecisionNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="euclideanDistanceNullWithPrecisionShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanNormWithPrecisionShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="addAndScalarMultiplyWithTwoVectorsShouldBeDistributive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.017"/>
  <testcase name="euclideanNormPow2ShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceNullWithPrecisionAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanDistanceShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.059"/>
  <testcase name="subtractNullShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="taxicabDistanceShouldBeSymmetric" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="negateShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="sizeShouldSucceed" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="taxicabNormShouldBeSubadditive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="euclideanDistancePow2SizesNotEqualShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="euclideanDistancePow2AbsShouldBeSymmetric" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.003"/>
  <testcase name="subtractSelfShouldBeEqualToZeroVector" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.007"/>
  <testcase name="euclideanNormPrecisionTooLowAndScaleAndRoundingModeShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="taxicabDistanceShouldBePositive" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <testcase name="euclideanDistancePrecisionTooHighShouldThrowException" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.001"/>
  <testcase name="scalarMultiplyWithOneShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.linear.BigIntVectorTest" time="0.002"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
