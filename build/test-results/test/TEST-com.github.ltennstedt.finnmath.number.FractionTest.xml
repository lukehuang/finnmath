<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.github.ltennstedt.finnmath.number.FractionTest" tests="91" skipped="0" failures="0" errors="0" timestamp="2017-10-14T21:28:09" hostname="archlinux" time="0.869">
  <properties/>
  <testcase name="greaterThanOrEqualToNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.321"/>
  <testcase name="addShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.035"/>
  <testcase name="subtractShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.013"/>
  <testcase name="toStringShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.037"/>
  <testcase name="intValueShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.017"/>
  <testcase name="newDenominatorZeroShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="powZeroShouldBeSameAsOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="divideShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.014"/>
  <testcase name="subtractZeroShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.009"/>
  <testcase name="compareToGreaterShouldReturnMinusOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="reduceZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.0"/>
  <testcase name="absMinusOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.0"/>
  <testcase name="invertSelfShouldBeEqualToOneDividedBySelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="divideMinusOneShouldBeEqualToNegated" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.01"/>
  <testcase name="normalizeShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="minShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="multiplyInvertedShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equivalentShouldBeTransitive" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.05"/>
  <testcase name="maxShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="normalizeZeroShouldBeTheSame" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="divideNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="equalsNumeratorNotEqualShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="signumMinusOneShouldBeEqualToMinusOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="powOfZeroForExponentNotEqualToZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="greaterThanOrEqualToShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="multiplyShouldBeCommutative" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.01"/>
  <testcase name="powNegativeExponentShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="multiplyNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equalsDenominatorNotEqualShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="normalizeOneShouldBeTheSame" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.0"/>
  <testcase name="signumOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.0"/>
  <testcase name="equalsSelfShouldReturnTrue" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="greaterThanShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="addShouldBeCommutative" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.008"/>
  <testcase name="greaterThanNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="multiplyShouldBeAssociative" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.023"/>
  <testcase name="divideOneShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.006"/>
  <testcase name="absZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="invertZeroShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equalsEqualShouldReturnTrue" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="absOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.0"/>
  <testcase name="addNegatedShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="hashCodeShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.005"/>
  <testcase name="addShouldBeAssociative" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.028"/>
  <testcase name="negateTwiceShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="absShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="minNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="invertShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.005"/>
  <testcase name="addAndMultiplyShouldBeDistributive" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.018"/>
  <testcase name="newNumeratorNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="newShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="newDenominatorNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="subtractSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="longValueShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.005"/>
  <testcase name="equivalentShouldBeReflexive" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="maxNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="divideZeroShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="addNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="powOneShouldBeTheSame" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="invertibleZeroShouldBeFalse" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="invertTwiceShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="addZeroShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equalsNotFractionShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="multiplyShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="lessThanOrEqualToShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="multiplyOneShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="invertibleShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="invertibleShouldBePredictable" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="negateZeroShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="invertOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="equivalentShouldBeSymmetric" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="lessThanShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="reduceShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="signumZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="compareToEqualShouldReturnZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="signumShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="powShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="multiplyMinusOneShouldBeEqualToNegated" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="lessThanOrEqualToNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="subtractNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="multiplyZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equivalentShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="floatValueShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.007"/>
  <testcase name="negateShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="powOfOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.0"/>
  <testcase name="doubleValueShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.005"/>
  <testcase name="compareToNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equivalentNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="compareToLowerShouldReturnMinusOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="reduceOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="lessThanNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
