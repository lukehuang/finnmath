<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="finnMath"><sessioninfo id="archlinux-156eb9df" start="1513533118471" dump="1513533148869"/><sessioninfo id="archlinux-de37cb24" start="1513533220125" dump="1513533251926"/><package name="com/github/ltennstedt/finnmath/linear"><class name="com/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableTable;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="70"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="102"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="132"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyVector" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;" line="161"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyRowWithColumn" desc="(Ljava/util/Map;Ljava/util/Map;)Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="178"><counter type="INSTRUCTION" missed="1" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarMultiply" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="203"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="221"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace" desc="()Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="233"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determinant" desc="()Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="255"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leibnizFormula" desc="()Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="279"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ruleOfSarrus" desc="()Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="300"><counter type="INSTRUCTION" missed="0" covered="174"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transpose" desc="()Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="319"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minor" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="348"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAbsColumnSumNorm" desc="()Ljava/math/BigDecimal;" line="377"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAbsRowSumNorm" desc="()Ljava/math/BigDecimal;" line="397"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNormPow2" desc="()Ljava/math/BigInteger;" line="417"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="()Ljava/math/BigDecimal;" line="435"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="455"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="478"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="505"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNorm" desc="()Ljava/math/BigDecimal;" line="521"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="upperTriangular" desc="()Z" line="537"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lowerTriangular" desc="()Z" line="557"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Z" line="578"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invertible" desc="()Z" line="599"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(II)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;" line="614"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="621"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="626"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$minor$8" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Lcom/google/common/collect/Table$Cell;)V" line="357"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$transpose$7" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Lcom/google/common/collect/Table$Cell;)V" line="321"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalarMultiply$6" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;Lcom/google/common/collect/Table$Cell;)V" line="206"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiplyVector$5" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;Ljava/lang/Integer;Ljava/util/Map;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiplyVector$4" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiply$3" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Ljava/lang/Integer;Ljava/util/Map;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiply$2" desc="(Ljava/util/Map;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtract$1" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;Lcom/google/common/collect/Table$Cell;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;Lcom/google/common/collect/Table$Cell;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="1294"/><counter type="BRANCH" missed="1" covered="103"/><counter type="LINE" missed="0" covered="198"/><counter type="COMPLEXITY" missed="1" covered="89"/><counter type="METHOD" missed="0" covered="38"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder"><method name="&lt;init&gt;" desc="(II)V" line="646"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;" line="662"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;" line="685"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="706"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$2" desc="(Lcom/google/common/collect/Table$Cell;)V" line="707"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$1" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;Ljava/lang/Integer;)V" line="687"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$0" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;Ljava/lang/Integer;)V" line="688"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="533"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;" line="552"><counter type="INSTRUCTION" missed="1" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;" line="577"><counter type="INSTRUCTION" missed="1" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;" line="596"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;" line="615"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$0" desc="(Ljava/lang/Integer;)V" line="616"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="118"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder"><method name="&lt;init&gt;" desc="(II)V" line="646"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;" line="662"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;" line="685"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="706"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$2" desc="(Lcom/google/common/collect/Table$Cell;)V" line="707"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$1" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;Ljava/lang/Integer;)V" line="687"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$0" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;Ljava/lang/Integer;)V" line="688"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/DecimalMatrix"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableTable;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="68"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="100"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="130"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyVector" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Lcom/github/ltennstedt/finnmath/linear/DecimalVector;" line="159"><counter type="INSTRUCTION" missed="19" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyRowWithColumn" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/math/BigDecimal;" line="176"><counter type="INSTRUCTION" missed="1" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarMultiply" desc="(Ljava/math/BigDecimal;)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="201"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="219"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace" desc="()Ljava/math/BigDecimal;" line="231"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determinant" desc="()Ljava/math/BigDecimal;" line="253"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leibnizFormula" desc="()Ljava/math/BigDecimal;" line="277"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ruleOfSarrus" desc="()Ljava/math/BigDecimal;" line="298"><counter type="INSTRUCTION" missed="0" covered="174"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transpose" desc="()Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="317"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minor" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="346"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAbsColumnSumNorm" desc="()Ljava/math/BigDecimal;" line="374"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAbsRowSumNorm" desc="()Ljava/math/BigDecimal;" line="394"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNormPow2" desc="()Ljava/math/BigDecimal;" line="414"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="()Ljava/math/BigDecimal;" line="431"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="454"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="480"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="510"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNorm" desc="()Ljava/math/BigDecimal;" line="530"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="upperTriangular" desc="()Z" line="546"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lowerTriangular" desc="()Z" line="566"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Z" line="587"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invertible" desc="()Z" line="608"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(II)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;" line="623"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="630"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="635"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$minor$8" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Lcom/google/common/collect/Table$Cell;)V" line="354"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$transpose$7" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Lcom/google/common/collect/Table$Cell;)V" line="319"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalarMultiply$6" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Ljava/math/BigDecimal;Lcom/google/common/collect/Table$Cell;)V" line="204"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiplyVector$5" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/DecimalVector;Ljava/lang/Integer;Ljava/util/Map;)V" line="164"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$multiplyVector$4" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/DecimalVector;Ljava/lang/Integer;Ljava/math/BigDecimal;)V" line="166"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$multiply$3" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Ljava/lang/Integer;Ljava/util/Map;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiply$2" desc="(Ljava/util/Map;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtract$1" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;Lcom/google/common/collect/Table$Cell;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;Lcom/google/common/collect/Table$Cell;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="1318"/><counter type="BRANCH" missed="4" covered="106"/><counter type="LINE" missed="8" covered="205"/><counter type="COMPLEXITY" missed="5" covered="88"/><counter type="METHOD" missed="2" covered="36"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/AbstractMatrixBuilder"><method name="&lt;init&gt;" desc="(II)V" line="43"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTable" desc="()Lcom/google/common/collect/Table;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableMap;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;" line="64"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;" line="89"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarMultiply" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;" line="112"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;" line="130"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taxicabNorm" desc="()Ljava/math/BigDecimal;" line="142"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taxicabDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;)Ljava/math/BigDecimal;" line="166"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNormPow2" desc="()Ljava/math/BigInteger;" line="180"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="()Ljava/math/BigDecimal;" line="198"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="218"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="241"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="268"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dotProduct" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;)Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="290"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistancePow2" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;)Ljava/math/BigInteger;" line="316"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;)Ljava/math/BigDecimal;" line="338"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="366"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="398"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="434"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNorm" desc="()Ljava/math/BigDecimal;" line="452"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;)Ljava/math/BigDecimal;" line="476"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="490"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(I)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;" line="503"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="509"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="514"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalarMultiply$2" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtract$1" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="617"/><counter type="BRANCH" missed="0" covered="58"/><counter type="LINE" missed="0" covered="94"/><counter type="COMPLEXITY" missed="0" covered="56"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/RealComplexNumberVector"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableMap;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;" line="63"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;" line="88"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarMultiply" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;" line="111"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taxicabNorm" desc="()Ljava/math/BigDecimal;" line="141"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taxicabDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;)Ljava/math/BigDecimal;" line="165"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNormPow2" desc="()Ljava/math/BigDecimal;" line="179"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="()Ljava/math/BigDecimal;" line="197"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="217"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="240"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="267"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dotProduct" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="289"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistancePow2" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;)Ljava/math/BigDecimal;" line="315"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;)Ljava/math/BigDecimal;" line="337"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="365"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="397"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="433"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNorm" desc="()Ljava/math/BigDecimal;" line="451"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;)Ljava/math/BigDecimal;" line="475"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="489"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(I)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;" line="502"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="508"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="513"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalarMultiply$2" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtract$1" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="617"/><counter type="BRANCH" missed="0" covered="58"/><counter type="LINE" missed="0" covered="94"/><counter type="COMPLEXITY" missed="0" covered="56"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder"><method name="&lt;init&gt;" desc="(II)V" line="642"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/math/BigInteger;)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;" line="657"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/math/BigInteger;)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;" line="680"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="701"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$2" desc="(Lcom/google/common/collect/Table$Cell;)V" line="702"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$1" desc="(Ljava/math/BigInteger;Ljava/lang/Integer;)V" line="682"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$0" desc="(Ljava/lang/Integer;Ljava/math/BigInteger;Ljava/lang/Integer;)V" line="683"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder"><method name="&lt;init&gt;" desc="(II)V" line="654"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/math/BigDecimal;)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;" line="681"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/math/BigDecimal;)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;" line="704"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="725"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$2" desc="(Lcom/google/common/collect/Table$Cell;)V" line="726"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$1" desc="(Ljava/math/BigDecimal;Ljava/lang/Integer;)V" line="706"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$putAll$0" desc="(Ljava/lang/Integer;Ljava/math/BigDecimal;Ljava/lang/Integer;)V" line="707"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/AbstractMatrix"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableTable;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="square" desc="()Z" line="114"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="triangular" desc="()Z" line="127"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="diagonal" desc="()Z" line="144"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="symmetric" desc="()Z" line="161"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skewSymmetric" desc="()Z" line="175"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rowIndexes" desc="()Lcom/google/common/collect/ImmutableSet;" line="187"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="columnIndexes" desc="()Lcom/google/common/collect/ImmutableSet;" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="element" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Object;" line="223"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cells" desc="()Lcom/google/common/collect/ImmutableSet;" line="241"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="row" desc="(Ljava/lang/Integer;)Lcom/google/common/collect/ImmutableMap;" line="259"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="column" desc="(Ljava/lang/Integer;)Lcom/google/common/collect/ImmutableMap;" line="280"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rows" desc="()Lcom/google/common/collect/ImmutableMap;" line="295"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="columns" desc="()Lcom/google/common/collect/ImmutableMap;" line="307"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elements" desc="()Lcom/google/common/collect/ImmutableCollection;" line="319"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()J" line="330"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rowSize" desc="()I" line="342"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="columnSize" desc="()I" line="354"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="359"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTable" desc="()Lcom/google/common/collect/ImmutableTable;" line="363"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="205"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="1" covered="28"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableTable;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="70"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="102"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="132"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyVector" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;" line="161"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyRowWithColumn" desc="(Ljava/util/Map;Ljava/util/Map;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="178"><counter type="INSTRUCTION" missed="1" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarMultiply" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="203"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="221"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="233"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determinant" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="255"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leibnizFormula" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="279"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ruleOfSarrus" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="300"><counter type="INSTRUCTION" missed="0" covered="174"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transpose" desc="()Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="319"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minor" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="348"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAbsColumnSumNorm" desc="()Ljava/math/BigDecimal;" line="377"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAbsRowSumNorm" desc="()Ljava/math/BigDecimal;" line="397"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNormPow2" desc="()Ljava/math/BigDecimal;" line="417"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="()Ljava/math/BigDecimal;" line="435"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="455"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="478"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="505"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNorm" desc="()Ljava/math/BigDecimal;" line="521"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="upperTriangular" desc="()Z" line="537"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lowerTriangular" desc="()Z" line="557"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Z" line="578"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invertible" desc="()Z" line="599"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(II)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;" line="614"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="621"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="626"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$minor$8" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Lcom/google/common/collect/Table$Cell;)V" line="357"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$transpose$7" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Lcom/google/common/collect/Table$Cell;)V" line="321"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalarMultiply$6" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;Lcom/google/common/collect/Table$Cell;)V" line="206"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiplyVector$5" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;Ljava/lang/Integer;Ljava/util/Map;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiplyVector$4" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector$RealComplexNumberVectorBuilder;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiply$3" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Ljava/lang/Integer;Ljava/util/Map;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiply$2" desc="(Ljava/util/Map;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)V" line="138"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtract$1" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;Lcom/google/common/collect/Table$Cell;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;Lcom/google/common/collect/Table$Cell;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="1294"/><counter type="BRANCH" missed="1" covered="103"/><counter type="LINE" missed="0" covered="198"/><counter type="COMPLEXITY" missed="1" covered="89"/><counter type="METHOD" missed="0" covered="38"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder"><method name="&lt;init&gt;" desc="(I)V" line="541"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/math/BigDecimal;)Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;" line="560"><counter type="INSTRUCTION" missed="1" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Integer;Ljava/math/BigDecimal;)Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;" line="585"><counter type="INSTRUCTION" missed="15" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/math/BigDecimal;)Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;" line="604"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/github/ltennstedt/finnmath/linear/DecimalVector;" line="623"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$0" desc="(Ljava/lang/Integer;)V" line="624"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="103"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="534"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;" line="553"><counter type="INSTRUCTION" missed="1" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;" line="578"><counter type="INSTRUCTION" missed="1" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector$SimpleComplexNumberVectorBuilder;" line="597"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;" line="616"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$0" desc="(Ljava/lang/Integer;)V" line="617"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="118"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/AbstractVector"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableMap;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="element" desc="(Ljava/lang/Integer;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entries" desc="()Lcom/google/common/collect/ImmutableSet;" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elements" desc="()Lcom/google/common/collect/ImmutableCollection;" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="150"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMap" desc="()Lcom/google/common/collect/ImmutableMap;" line="159"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="44"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/BigIntMatrix"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableTable;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="68"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="100"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="130"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyVector" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;)Lcom/github/ltennstedt/finnmath/linear/BigIntVector;" line="159"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplyRowWithColumn" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/math/BigInteger;" line="176"><counter type="INSTRUCTION" missed="1" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarMultiply" desc="(Ljava/math/BigInteger;)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="201"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="219"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trace" desc="()Ljava/math/BigInteger;" line="231"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determinant" desc="()Ljava/math/BigInteger;" line="253"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leibnizFormula" desc="()Ljava/math/BigInteger;" line="277"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ruleOfSarrus" desc="()Ljava/math/BigInteger;" line="298"><counter type="INSTRUCTION" missed="0" covered="174"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transpose" desc="()Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="317"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minor" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="346"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAbsColumnSumNorm" desc="()Ljava/math/BigInteger;" line="374"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxAbsRowSumNorm" desc="()Ljava/math/BigInteger;" line="394"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNormPow2" desc="()Ljava/math/BigInteger;" line="414"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="()Ljava/math/BigDecimal;" line="432"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="452"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="475"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frobeniusNorm" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="502"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNorm" desc="()Ljava/math/BigInteger;" line="518"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="upperTriangular" desc="()Z" line="534"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lowerTriangular" desc="()Z" line="554"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Z" line="575"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invertible" desc="()Z" line="596"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(II)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;" line="611"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="618"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="623"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$minor$8" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Lcom/google/common/collect/Table$Cell;)V" line="354"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$transpose$7" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Lcom/google/common/collect/Table$Cell;)V" line="319"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalarMultiply$6" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Ljava/math/BigInteger;Lcom/google/common/collect/Table$Cell;)V" line="204"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiplyVector$5" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/BigIntVector;Ljava/lang/Integer;Ljava/util/Map;)V" line="164"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiplyVector$4" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/BigIntVector;Ljava/lang/Integer;Ljava/math/BigInteger;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiply$3" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Ljava/lang/Integer;Ljava/util/Map;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$multiply$2" desc="(Ljava/util/Map;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/Map;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtract$1" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;Lcom/google/common/collect/Table$Cell;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;Lcom/google/common/collect/Table$Cell;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="1295"/><counter type="BRANCH" missed="1" covered="103"/><counter type="LINE" missed="0" covered="197"/><counter type="COMPLEXITY" missed="1" covered="89"/><counter type="METHOD" missed="0" covered="38"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/DecimalVector"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Lcom/github/ltennstedt/finnmath/linear/DecimalVector;" line="60"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Lcom/github/ltennstedt/finnmath/linear/DecimalVector;" line="83"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dotProduct" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Ljava/math/BigDecimal;" line="108"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarMultiply" desc="(Ljava/math/BigDecimal;)Lcom/github/ltennstedt/finnmath/linear/DecimalVector;" line="130"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/linear/DecimalVector;" line="148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taxicabNorm" desc="()Ljava/math/BigDecimal;" line="160"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taxicabDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Ljava/math/BigDecimal;" line="184"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNormPow2" desc="()Ljava/math/BigDecimal;" line="199"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="()Ljava/math/BigDecimal;" line="213"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="233"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="256"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="283"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistancePow2" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Ljava/math/BigDecimal;" line="307"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Ljava/math/BigDecimal;" line="329"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="357"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="388"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="424"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNorm" desc="()Ljava/math/BigDecimal;" line="442"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Ljava/math/BigDecimal;" line="466"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="480"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalByComparingTo" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector;)Z" line="492"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="(I)Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;" line="510"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="516"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="521"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalarMultiply$2" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtract$1" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/DecimalVector;Ljava/lang/Integer;Ljava/math/BigDecimal;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalVector$DecimalVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/DecimalVector;Ljava/lang/Integer;Ljava/math/BigDecimal;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="598"/><counter type="BRANCH" missed="4" covered="56"/><counter type="LINE" missed="5" covered="90"/><counter type="COMPLEXITY" missed="3" covered="55"/><counter type="METHOD" missed="1" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder"><method name="&lt;init&gt;" desc="(Ljava/lang/Integer;)V" line="528"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/math/BigInteger;)Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;" line="547"><counter type="INSTRUCTION" missed="1" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Integer;Ljava/math/BigInteger;)Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;" line="572"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/math/BigInteger;)Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;" line="591"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/github/ltennstedt/finnmath/linear/BigIntVector;" line="610"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$build$0" desc="(Ljava/lang/Integer;)V" line="611"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="119"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/AbstractVectorBuilder"><method name="&lt;init&gt;" desc="(I)V" line="43"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="element" desc="(Ljava/lang/Integer;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMap" desc="()Ljava/util/Map;" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()I" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="61"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/linear/BigIntVector"><method name="&lt;init&gt;" desc="(Lcom/google/common/collect/ImmutableMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;)Lcom/github/ltennstedt/finnmath/linear/BigIntVector;" line="62"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;)Lcom/github/ltennstedt/finnmath/linear/BigIntVector;" line="87"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarMultiply" desc="(Ljava/math/BigInteger;)Lcom/github/ltennstedt/finnmath/linear/BigIntVector;" line="110"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/linear/BigIntVector;" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taxicabNorm" desc="()Ljava/math/BigInteger;" line="140"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taxicabDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;)Ljava/math/BigInteger;" line="164"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNormPow2" desc="()Ljava/math/BigInteger;" line="179"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="()Ljava/math/BigDecimal;" line="193"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="213"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="236"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanNorm" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="263"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dotProduct" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;)Ljava/math/BigInteger;" line="285"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistancePow2" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;)Ljava/math/BigInteger;" line="311"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;)Ljava/math/BigDecimal;" line="333"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="361"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="392"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclideanDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="428"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxNorm" desc="()Ljava/math/BigInteger;" line="446"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxDistance" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector;)Ljava/math/BigInteger;" line="470"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="484"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(I)Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;" line="497"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="503"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="508"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$scalarMultiply$2" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;Ljava/math/BigInteger;Ljava/math/BigInteger;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$subtract$1" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/BigIntVector;Ljava/lang/Integer;Ljava/math/BigInteger;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$add$0" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntVector$BigIntVectorBuilder;Lcom/github/ltennstedt/finnmath/linear/BigIntVector;Ljava/lang/Integer;Ljava/math/BigInteger;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="599"/><counter type="BRANCH" missed="0" covered="56"/><counter type="LINE" missed="0" covered="90"/><counter type="COMPLEXITY" missed="0" covered="55"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DecimalVector.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="15" mb="0" cb="2"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="15" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="16" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="12" mb="0" cb="2"/><line nr="112" mi="0" ci="13" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="12" mb="0" cb="2"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="16" mb="0" cb="2"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="14" mb="0" cb="4"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="256" mi="0" ci="8" mb="0" cb="2"/><line nr="257" mi="0" ci="9" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="14" mb="0" cb="4"/><line nr="286" mi="0" ci="8" mb="0" cb="2"/><line nr="287" mi="0" ci="10" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="16" mb="0" cb="2"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="16" mb="0" cb="2"/><line nr="331" mi="0" ci="8" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="16" mb="0" cb="2"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="14" mb="0" cb="4"/><line nr="362" mi="0" ci="9" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="16" mb="0" cb="2"/><line nr="390" mi="0" ci="8" mb="0" cb="2"/><line nr="391" mi="0" ci="10" mb="0" cb="0"/><line nr="424" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="16" mb="0" cb="2"/><line nr="426" mi="0" ci="4" mb="0" cb="0"/><line nr="427" mi="0" ci="14" mb="0" cb="4"/><line nr="429" mi="0" ci="8" mb="0" cb="2"/><line nr="430" mi="0" ci="11" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="443" mi="0" ci="12" mb="0" cb="2"/><line nr="444" mi="0" ci="5" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="16" mb="0" cb="2"/><line nr="468" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="0"/><line nr="492" mi="12" ci="0" mb="2" cb="0"/><line nr="493" mi="11" ci="0" mb="2" cb="0"/><line nr="494" mi="2" ci="0" mb="0" cb="0"/><line nr="496" mi="1" ci="0" mb="0" cb="0"/><line nr="497" mi="2" ci="0" mb="0" cb="0"/><line nr="510" mi="0" ci="8" mb="0" cb="2"/><line nr="511" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="9" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="0" cb="2"/><line nr="522" mi="0" ci="2" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="2"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="6" mb="0" cb="0"/><line nr="541" mi="0" ci="3" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="0" cb="0"/><line nr="561" mi="0" ci="6" mb="0" cb="0"/><line nr="562" mi="1" ci="13" mb="1" cb="1"/><line nr="563" mi="0" ci="7" mb="0" cb="0"/><line nr="564" mi="0" ci="2" mb="0" cb="0"/><line nr="585" mi="0" ci="4" mb="0" cb="0"/><line nr="586" mi="0" ci="4" mb="0" cb="0"/><line nr="587" mi="7" ci="10" mb="1" cb="3"/><line nr="588" mi="6" ci="0" mb="0" cb="0"/><line nr="589" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="0" ci="4" mb="0" cb="0"/><line nr="605" mi="0" ci="8" mb="0" cb="2"/><line nr="606" mi="0" ci="7" mb="0" cb="0"/><line nr="608" mi="0" ci="2" mb="0" cb="0"/><line nr="623" mi="0" ci="11" mb="0" cb="0"/><line nr="624" mi="0" ci="8" mb="0" cb="0"/><line nr="625" mi="0" ci="1" mb="0" cb="0"/><line nr="626" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="701"/><counter type="BRANCH" missed="6" covered="62"/><counter type="LINE" missed="7" covered="108"/><counter type="COMPLEXITY" missed="5" covered="63"/><counter type="METHOD" missed="1" covered="33"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RealComplexNumberVector.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="15" mb="0" cb="2"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="15" mb="0" cb="2"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="12" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="16" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="12" mb="0" cb="2"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="14" mb="0" cb="4"/><line nr="220" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="8" mb="0" cb="2"/><line nr="241" mi="0" ci="9" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="14" mb="0" cb="4"/><line nr="270" mi="0" ci="8" mb="0" cb="2"/><line nr="271" mi="0" ci="10" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="16" mb="0" cb="2"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="12" mb="0" cb="2"/><line nr="293" mi="0" ci="13" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="16" mb="0" cb="2"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="16" mb="0" cb="2"/><line nr="339" mi="0" ci="8" mb="0" cb="0"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="16" mb="0" cb="2"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="368" mi="0" ci="14" mb="0" cb="4"/><line nr="370" mi="0" ci="9" mb="0" cb="0"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="16" mb="0" cb="2"/><line nr="399" mi="0" ci="8" mb="0" cb="2"/><line nr="400" mi="0" ci="10" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="434" mi="0" ci="16" mb="0" cb="2"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="436" mi="0" ci="14" mb="0" cb="4"/><line nr="438" mi="0" ci="8" mb="0" cb="2"/><line nr="439" mi="0" ci="11" mb="0" cb="0"/><line nr="451" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="12" mb="0" cb="2"/><line nr="453" mi="0" ci="5" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="16" mb="0" cb="2"/><line nr="477" mi="0" ci="5" mb="0" cb="0"/><line nr="489" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="8" mb="0" cb="2"/><line nr="503" mi="0" ci="7" mb="0" cb="0"/><line nr="508" mi="0" ci="9" mb="0" cb="0"/><line nr="513" mi="0" ci="3" mb="0" cb="2"/><line nr="514" mi="0" ci="2" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="2"/><line nr="517" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="1" mb="0" cb="0"/><line nr="552" mi="0" ci="4" mb="0" cb="0"/><line nr="553" mi="0" ci="6" mb="0" cb="0"/><line nr="554" mi="1" ci="13" mb="1" cb="1"/><line nr="555" mi="0" ci="7" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="0"/><line nr="577" mi="0" ci="4" mb="0" cb="0"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="1" ci="16" mb="2" cb="2"/><line nr="580" mi="0" ci="6" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="4" mb="0" cb="0"/><line nr="597" mi="0" ci="8" mb="0" cb="2"/><line nr="598" mi="0" ci="7" mb="0" cb="0"/><line nr="600" mi="0" ci="2" mb="0" cb="0"/><line nr="615" mi="0" ci="11" mb="0" cb="0"/><line nr="616" mi="0" ci="8" mb="0" cb="0"/><line nr="617" mi="0" ci="1" mb="0" cb="0"/><line nr="618" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="735"/><counter type="BRANCH" missed="3" covered="63"/><counter type="LINE" missed="0" covered="114"/><counter type="COMPLEXITY" missed="3" covered="63"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractVector.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="44"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleComplexNumberVector.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="15" mb="0" cb="2"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="15" mb="0" cb="2"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="12" mb="0" cb="2"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="16" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="12" mb="0" cb="2"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="14" mb="0" cb="4"/><line nr="221" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="8" mb="0" cb="2"/><line nr="242" mi="0" ci="9" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="14" mb="0" cb="4"/><line nr="271" mi="0" ci="8" mb="0" cb="2"/><line nr="272" mi="0" ci="10" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="0" ci="16" mb="0" cb="2"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="12" mb="0" cb="2"/><line nr="294" mi="0" ci="13" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="16" mb="0" cb="2"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="16" mb="0" cb="2"/><line nr="340" mi="0" ci="8" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="16" mb="0" cb="2"/><line nr="368" mi="0" ci="4" mb="0" cb="0"/><line nr="369" mi="0" ci="14" mb="0" cb="4"/><line nr="371" mi="0" ci="9" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="16" mb="0" cb="2"/><line nr="400" mi="0" ci="8" mb="0" cb="2"/><line nr="401" mi="0" ci="10" mb="0" cb="0"/><line nr="434" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="16" mb="0" cb="2"/><line nr="436" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="14" mb="0" cb="4"/><line nr="439" mi="0" ci="8" mb="0" cb="2"/><line nr="440" mi="0" ci="11" mb="0" cb="0"/><line nr="452" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="12" mb="0" cb="2"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="1" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="477" mi="0" ci="16" mb="0" cb="2"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="490" mi="0" ci="4" mb="0" cb="0"/><line nr="503" mi="0" ci="8" mb="0" cb="2"/><line nr="504" mi="0" ci="7" mb="0" cb="0"/><line nr="509" mi="0" ci="9" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="2"/><line nr="515" mi="0" ci="2" mb="0" cb="0"/><line nr="517" mi="0" ci="3" mb="0" cb="2"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="0"/><line nr="521" mi="0" ci="6" mb="0" cb="0"/><line nr="534" mi="0" ci="4" mb="0" cb="0"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="553" mi="0" ci="4" mb="0" cb="0"/><line nr="554" mi="0" ci="6" mb="0" cb="0"/><line nr="555" mi="1" ci="13" mb="1" cb="1"/><line nr="556" mi="0" ci="7" mb="0" cb="0"/><line nr="557" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="4" mb="0" cb="0"/><line nr="579" mi="0" ci="4" mb="0" cb="0"/><line nr="580" mi="1" ci="16" mb="2" cb="2"/><line nr="581" mi="0" ci="6" mb="0" cb="0"/><line nr="582" mi="0" ci="2" mb="0" cb="0"/><line nr="597" mi="0" ci="4" mb="0" cb="0"/><line nr="598" mi="0" ci="8" mb="0" cb="2"/><line nr="599" mi="0" ci="7" mb="0" cb="0"/><line nr="601" mi="0" ci="2" mb="0" cb="0"/><line nr="616" mi="0" ci="11" mb="0" cb="0"/><line nr="617" mi="0" ci="8" mb="0" cb="0"/><line nr="618" mi="0" ci="1" mb="0" cb="0"/><line nr="619" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="735"/><counter type="BRANCH" missed="3" covered="63"/><counter type="LINE" missed="0" covered="114"/><counter type="COMPLEXITY" missed="3" covered="63"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractVectorBuilder.java"><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="1" ci="7" mb="1" cb="1"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="1" ci="16" mb="2" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="61"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DecimalMatrix.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="14" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="14" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="14" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="14" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="14" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="3" ci="11" mb="1" cb="1"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="164" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="11" ci="0" mb="2" cb="0"/><line nr="167" mi="12" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="1" ci="12" mb="1" cb="1"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="11" mb="0" cb="2"/><line nr="182" mi="0" ci="12" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="10" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="14" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="10" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="12" mb="0" cb="2"/><line nr="235" mi="0" ci="9" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="9" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="12" mb="0" cb="2"/><line nr="258" mi="0" ci="7" mb="0" cb="2"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="2"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="2"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="36" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="13" mb="0" cb="2"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="7" mb="0" cb="2"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="9" mb="0" cb="2"/><line nr="285" mi="0" ci="8" mb="0" cb="2"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="12" mb="0" cb="0"/><line nr="291" mi="0" ci="9" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="27" mb="0" cb="0"/><line nr="299" mi="0" ci="27" mb="0" cb="0"/><line nr="300" mi="0" ci="27" mb="0" cb="0"/><line nr="301" mi="0" ci="27" mb="0" cb="0"/><line nr="302" mi="0" ci="27" mb="0" cb="0"/><line nr="303" mi="0" ci="27" mb="0" cb="0"/><line nr="304" mi="0" ci="12" mb="0" cb="0"/><line nr="317" mi="0" ci="10" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="12" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="8" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="8" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="14" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="8" mb="0" cb="4"/><line nr="357" mi="0" ci="13" mb="0" cb="2"/><line nr="358" mi="0" ci="13" mb="0" cb="2"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="14" mb="0" cb="2"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="11" mb="0" cb="2"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="14" mb="0" cb="2"/><line nr="396" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="11" mb="0" cb="2"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="12" mb="0" cb="2"/><line nr="416" mi="0" ci="6" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="12" mb="0" cb="2"/><line nr="433" mi="0" ci="6" mb="0" cb="0"/><line nr="434" mi="0" ci="1" mb="0" cb="0"/><line nr="435" mi="0" ci="6" mb="0" cb="0"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="14" mb="0" cb="4"/><line nr="457" mi="0" ci="2" mb="0" cb="0"/><line nr="458" mi="0" ci="12" mb="0" cb="2"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="460" mi="0" ci="1" mb="0" cb="0"/><line nr="461" mi="0" ci="7" mb="0" cb="0"/><line nr="480" mi="0" ci="8" mb="0" cb="2"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="12" mb="0" cb="2"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="485" mi="0" ci="8" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="511" mi="0" ci="14" mb="0" cb="4"/><line nr="513" mi="0" ci="8" mb="0" cb="2"/><line nr="514" mi="0" ci="2" mb="0" cb="0"/><line nr="515" mi="0" ci="12" mb="0" cb="2"/><line nr="516" mi="0" ci="6" mb="0" cb="0"/><line nr="517" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="0" ci="9" mb="0" cb="0"/><line nr="530" mi="0" ci="2" mb="0" cb="0"/><line nr="531" mi="0" ci="12" mb="0" cb="2"/><line nr="532" mi="0" ci="5" mb="0" cb="0"/><line nr="533" mi="0" ci="1" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="546" mi="0" ci="3" mb="0" cb="2"/><line nr="547" mi="0" ci="12" mb="0" cb="2"/><line nr="548" mi="0" ci="15" mb="0" cb="4"/><line nr="549" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="0" ci="1" mb="0" cb="0"/><line nr="552" mi="0" ci="2" mb="0" cb="0"/><line nr="554" mi="0" ci="2" mb="0" cb="0"/><line nr="566" mi="0" ci="3" mb="0" cb="2"/><line nr="567" mi="0" ci="12" mb="0" cb="2"/><line nr="568" mi="0" ci="15" mb="0" cb="4"/><line nr="569" mi="0" ci="2" mb="0" cb="0"/><line nr="571" mi="0" ci="1" mb="0" cb="0"/><line nr="572" mi="0" ci="2" mb="0" cb="0"/><line nr="574" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="2"/><line nr="588" mi="0" ci="12" mb="0" cb="2"/><line nr="589" mi="0" ci="9" mb="0" cb="2"/><line nr="590" mi="0" ci="2" mb="0" cb="0"/><line nr="592" mi="0" ci="1" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="608" mi="0" ci="9" mb="0" cb="2"/><line nr="623" mi="0" ci="8" mb="0" cb="2"/><line nr="624" mi="0" ci="8" mb="0" cb="2"/><line nr="625" mi="0" ci="6" mb="0" cb="0"/><line nr="630" mi="0" ci="9" mb="0" cb="0"/><line nr="635" mi="0" ci="3" mb="0" cb="2"/><line nr="636" mi="0" ci="2" mb="0" cb="0"/><line nr="638" mi="0" ci="3" mb="0" cb="2"/><line nr="639" mi="0" ci="2" mb="0" cb="0"/><line nr="641" mi="0" ci="3" mb="0" cb="0"/><line nr="642" mi="0" ci="6" mb="0" cb="0"/><line nr="654" mi="0" ci="4" mb="0" cb="0"/><line nr="655" mi="0" ci="1" mb="0" cb="0"/><line nr="681" mi="0" ci="4" mb="0" cb="0"/><line nr="682" mi="0" ci="4" mb="0" cb="0"/><line nr="683" mi="0" ci="4" mb="0" cb="0"/><line nr="684" mi="0" ci="9" mb="0" cb="0"/><line nr="685" mi="0" ci="3" mb="0" cb="0"/><line nr="686" mi="0" ci="9" mb="0" cb="0"/><line nr="687" mi="0" ci="3" mb="0" cb="0"/><line nr="688" mi="0" ci="7" mb="0" cb="0"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><line nr="704" mi="0" ci="4" mb="0" cb="0"/><line nr="705" mi="0" ci="7" mb="0" cb="0"/><line nr="706" mi="0" ci="8" mb="0" cb="0"/><line nr="707" mi="0" ci="7" mb="0" cb="0"/><line nr="708" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="0" ci="1" mb="0" cb="0"/><line nr="710" mi="0" ci="2" mb="0" cb="0"/><line nr="725" mi="0" ci="5" mb="0" cb="0"/><line nr="726" mi="0" ci="6" mb="0" cb="0"/><line nr="727" mi="0" ci="1" mb="0" cb="0"/><line nr="728" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="1418"/><counter type="BRANCH" missed="4" covered="106"/><counter type="LINE" missed="8" covered="227"/><counter type="COMPLEXITY" missed="5" covered="95"/><counter type="METHOD" missed="2" covered="43"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractMatrix.java"><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="13" mb="0" cb="2"/><line nr="127" mi="0" ci="10" mb="0" cb="4"/><line nr="144" mi="0" ci="10" mb="1" cb="3"/><line nr="161" mi="0" ci="12" mb="0" cb="4"/><line nr="175" mi="0" ci="13" mb="0" cb="4"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="9" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="9" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="9" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="9" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="16" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="205"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="1" covered="28"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BigIntMatrix.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="14" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="14" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="14" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="14" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="14" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="14" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="2"/><line nr="167" mi="0" ci="12" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="1" ci="12" mb="1" cb="1"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="11" mb="0" cb="2"/><line nr="182" mi="0" ci="12" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="10" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="14" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="10" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="12" mb="0" cb="2"/><line nr="235" mi="0" ci="9" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="9" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="12" mb="0" cb="2"/><line nr="258" mi="0" ci="7" mb="0" cb="2"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="2"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="2"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="36" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="13" mb="0" cb="2"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="7" mb="0" cb="2"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="9" mb="0" cb="2"/><line nr="285" mi="0" ci="8" mb="0" cb="2"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="12" mb="0" cb="0"/><line nr="291" mi="0" ci="9" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="27" mb="0" cb="0"/><line nr="299" mi="0" ci="27" mb="0" cb="0"/><line nr="300" mi="0" ci="27" mb="0" cb="0"/><line nr="301" mi="0" ci="27" mb="0" cb="0"/><line nr="302" mi="0" ci="27" mb="0" cb="0"/><line nr="303" mi="0" ci="27" mb="0" cb="0"/><line nr="304" mi="0" ci="12" mb="0" cb="0"/><line nr="317" mi="0" ci="10" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="12" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="8" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="8" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="14" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="8" mb="0" cb="4"/><line nr="357" mi="0" ci="13" mb="0" cb="2"/><line nr="358" mi="0" ci="13" mb="0" cb="2"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="14" mb="0" cb="2"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="377" mi="0" ci="11" mb="0" cb="2"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="14" mb="0" cb="2"/><line nr="396" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="11" mb="0" cb="2"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="12" mb="0" cb="2"/><line nr="416" mi="0" ci="6" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="432" mi="0" ci="7" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="14" mb="0" cb="4"/><line nr="455" mi="0" ci="8" mb="0" cb="0"/><line nr="475" mi="0" ci="8" mb="0" cb="2"/><line nr="476" mi="0" ci="9" mb="0" cb="0"/><line nr="502" mi="0" ci="4" mb="0" cb="0"/><line nr="503" mi="0" ci="14" mb="0" cb="4"/><line nr="505" mi="0" ci="8" mb="0" cb="2"/><line nr="506" mi="0" ci="10" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="12" mb="0" cb="2"/><line nr="520" mi="0" ci="5" mb="0" cb="0"/><line nr="521" mi="0" ci="1" mb="0" cb="0"/><line nr="522" mi="0" ci="2" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="2"/><line nr="535" mi="0" ci="12" mb="0" cb="2"/><line nr="536" mi="0" ci="15" mb="0" cb="4"/><line nr="537" mi="0" ci="2" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="2" mb="0" cb="0"/><line nr="554" mi="0" ci="3" mb="0" cb="2"/><line nr="555" mi="0" ci="12" mb="0" cb="2"/><line nr="556" mi="0" ci="15" mb="0" cb="4"/><line nr="557" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="1" mb="0" cb="0"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="0" ci="2" mb="0" cb="0"/><line nr="575" mi="0" ci="3" mb="0" cb="2"/><line nr="576" mi="0" ci="12" mb="0" cb="2"/><line nr="577" mi="0" ci="9" mb="0" cb="2"/><line nr="578" mi="0" ci="2" mb="0" cb="0"/><line nr="580" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="15" mb="0" cb="4"/><line nr="611" mi="0" ci="8" mb="0" cb="2"/><line nr="612" mi="0" ci="8" mb="0" cb="2"/><line nr="613" mi="0" ci="7" mb="0" cb="0"/><line nr="618" mi="0" ci="9" mb="0" cb="0"/><line nr="623" mi="0" ci="3" mb="0" cb="2"/><line nr="624" mi="0" ci="2" mb="0" cb="0"/><line nr="626" mi="0" ci="3" mb="0" cb="2"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="0"/><line nr="630" mi="0" ci="6" mb="0" cb="0"/><line nr="642" mi="0" ci="4" mb="0" cb="0"/><line nr="643" mi="0" ci="1" mb="0" cb="0"/><line nr="657" mi="0" ci="4" mb="0" cb="0"/><line nr="658" mi="0" ci="4" mb="0" cb="0"/><line nr="659" mi="0" ci="4" mb="0" cb="0"/><line nr="660" mi="0" ci="9" mb="0" cb="0"/><line nr="661" mi="0" ci="3" mb="0" cb="0"/><line nr="662" mi="0" ci="9" mb="0" cb="0"/><line nr="663" mi="0" ci="3" mb="0" cb="0"/><line nr="664" mi="0" ci="7" mb="0" cb="0"/><line nr="665" mi="0" ci="2" mb="0" cb="0"/><line nr="680" mi="0" ci="4" mb="0" cb="0"/><line nr="681" mi="0" ci="7" mb="0" cb="0"/><line nr="682" mi="0" ci="8" mb="0" cb="0"/><line nr="683" mi="0" ci="7" mb="0" cb="0"/><line nr="684" mi="0" ci="1" mb="0" cb="0"/><line nr="685" mi="0" ci="1" mb="0" cb="0"/><line nr="686" mi="0" ci="2" mb="0" cb="0"/><line nr="701" mi="0" ci="5" mb="0" cb="0"/><line nr="702" mi="0" ci="6" mb="0" cb="0"/><line nr="703" mi="0" ci="1" mb="0" cb="0"/><line nr="704" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="1395"/><counter type="BRANCH" missed="1" covered="103"/><counter type="LINE" missed="0" covered="219"/><counter type="COMPLEXITY" missed="1" covered="96"/><counter type="METHOD" missed="0" covered="45"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RealComplexNumberMatrix.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="14" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="14" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="14" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="14" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="14" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="14" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="14" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="14" mb="0" cb="2"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="11" mb="0" cb="2"/><line nr="169" mi="0" ci="12" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="1" ci="12" mb="1" cb="1"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="0" cb="2"/><line nr="184" mi="0" ci="12" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="10" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="14" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="10" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="12" mb="0" cb="2"/><line nr="237" mi="0" ci="9" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="9" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="2"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="12" mb="0" cb="2"/><line nr="260" mi="0" ci="7" mb="0" cb="2"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="2"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="36" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="13" mb="0" cb="2"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="7" mb="0" cb="2"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="9" mb="0" cb="2"/><line nr="287" mi="0" ci="8" mb="0" cb="2"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="12" mb="0" cb="0"/><line nr="293" mi="0" ci="9" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="27" mb="0" cb="0"/><line nr="301" mi="0" ci="27" mb="0" cb="0"/><line nr="302" mi="0" ci="27" mb="0" cb="0"/><line nr="303" mi="0" ci="27" mb="0" cb="0"/><line nr="304" mi="0" ci="27" mb="0" cb="0"/><line nr="305" mi="0" ci="27" mb="0" cb="0"/><line nr="306" mi="0" ci="12" mb="0" cb="0"/><line nr="319" mi="0" ci="10" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="12" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="8" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="8" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="12" mb="0" cb="0"/><line nr="356" mi="0" ci="8" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="4"/><line nr="360" mi="0" ci="13" mb="0" cb="2"/><line nr="361" mi="0" ci="13" mb="0" cb="2"/><line nr="362" mi="0" ci="8" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="14" mb="0" cb="2"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="11" mb="0" cb="2"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="14" mb="0" cb="2"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="11" mb="0" cb="2"/><line nr="401" mi="0" ci="5" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="418" mi="0" ci="12" mb="0" cb="2"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="7" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="14" mb="0" cb="4"/><line nr="458" mi="0" ci="8" mb="0" cb="0"/><line nr="478" mi="0" ci="8" mb="0" cb="2"/><line nr="479" mi="0" ci="9" mb="0" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="14" mb="0" cb="4"/><line nr="508" mi="0" ci="8" mb="0" cb="2"/><line nr="509" mi="0" ci="10" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="0" cb="0"/><line nr="522" mi="0" ci="12" mb="0" cb="2"/><line nr="523" mi="0" ci="5" mb="0" cb="0"/><line nr="524" mi="0" ci="1" mb="0" cb="0"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="3" mb="0" cb="2"/><line nr="538" mi="0" ci="12" mb="0" cb="2"/><line nr="539" mi="0" ci="15" mb="0" cb="4"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="2"/><line nr="558" mi="0" ci="12" mb="0" cb="2"/><line nr="559" mi="0" ci="15" mb="0" cb="4"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="2"/><line nr="579" mi="0" ci="12" mb="0" cb="2"/><line nr="580" mi="0" ci="9" mb="0" cb="2"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="1" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="0" ci="15" mb="0" cb="4"/><line nr="614" mi="0" ci="8" mb="0" cb="2"/><line nr="615" mi="0" ci="8" mb="0" cb="2"/><line nr="616" mi="0" ci="7" mb="0" cb="0"/><line nr="621" mi="0" ci="9" mb="0" cb="0"/><line nr="626" mi="0" ci="3" mb="0" cb="2"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="2"/><line nr="630" mi="0" ci="2" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="0"/><line nr="633" mi="0" ci="6" mb="0" cb="0"/><line nr="646" mi="0" ci="4" mb="0" cb="0"/><line nr="647" mi="0" ci="1" mb="0" cb="0"/><line nr="662" mi="0" ci="4" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="664" mi="0" ci="4" mb="0" cb="0"/><line nr="665" mi="0" ci="9" mb="0" cb="0"/><line nr="666" mi="0" ci="3" mb="0" cb="0"/><line nr="667" mi="0" ci="9" mb="0" cb="0"/><line nr="668" mi="0" ci="3" mb="0" cb="0"/><line nr="669" mi="0" ci="7" mb="0" cb="0"/><line nr="670" mi="0" ci="2" mb="0" cb="0"/><line nr="685" mi="0" ci="4" mb="0" cb="0"/><line nr="686" mi="0" ci="7" mb="0" cb="0"/><line nr="687" mi="0" ci="8" mb="0" cb="0"/><line nr="688" mi="0" ci="7" mb="0" cb="0"/><line nr="689" mi="0" ci="1" mb="0" cb="0"/><line nr="690" mi="0" ci="1" mb="0" cb="0"/><line nr="691" mi="0" ci="2" mb="0" cb="0"/><line nr="706" mi="0" ci="5" mb="0" cb="0"/><line nr="707" mi="0" ci="6" mb="0" cb="0"/><line nr="708" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="1394"/><counter type="BRANCH" missed="1" covered="103"/><counter type="LINE" missed="0" covered="220"/><counter type="COMPLEXITY" missed="1" covered="96"/><counter type="METHOD" missed="0" covered="45"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SimpleComplexNumberMatrix.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="14" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="14" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="14" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="14" mb="0" cb="2"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="14" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="14" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="14" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="14" mb="0" cb="2"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="11" mb="0" cb="2"/><line nr="169" mi="0" ci="12" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="1" ci="12" mb="1" cb="1"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="0" cb="2"/><line nr="184" mi="0" ci="12" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="10" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="14" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="10" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="12" mb="0" cb="2"/><line nr="237" mi="0" ci="9" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="9" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="2"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="12" mb="0" cb="2"/><line nr="260" mi="0" ci="7" mb="0" cb="2"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="2"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="36" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="13" mb="0" cb="2"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="7" mb="0" cb="2"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="9" mb="0" cb="2"/><line nr="287" mi="0" ci="8" mb="0" cb="2"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="12" mb="0" cb="0"/><line nr="293" mi="0" ci="9" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="27" mb="0" cb="0"/><line nr="301" mi="0" ci="27" mb="0" cb="0"/><line nr="302" mi="0" ci="27" mb="0" cb="0"/><line nr="303" mi="0" ci="27" mb="0" cb="0"/><line nr="304" mi="0" ci="27" mb="0" cb="0"/><line nr="305" mi="0" ci="27" mb="0" cb="0"/><line nr="306" mi="0" ci="12" mb="0" cb="0"/><line nr="319" mi="0" ci="10" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="12" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="8" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="8" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="12" mb="0" cb="0"/><line nr="356" mi="0" ci="8" mb="0" cb="0"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="4"/><line nr="360" mi="0" ci="13" mb="0" cb="2"/><line nr="361" mi="0" ci="13" mb="0" cb="2"/><line nr="362" mi="0" ci="8" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="14" mb="0" cb="2"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="0" ci="11" mb="0" cb="2"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="14" mb="0" cb="2"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="11" mb="0" cb="2"/><line nr="401" mi="0" ci="5" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="2" mb="0" cb="0"/><line nr="418" mi="0" ci="12" mb="0" cb="2"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="7" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="14" mb="0" cb="4"/><line nr="458" mi="0" ci="8" mb="0" cb="0"/><line nr="478" mi="0" ci="8" mb="0" cb="2"/><line nr="479" mi="0" ci="9" mb="0" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="506" mi="0" ci="14" mb="0" cb="4"/><line nr="508" mi="0" ci="8" mb="0" cb="2"/><line nr="509" mi="0" ci="10" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="0" cb="0"/><line nr="522" mi="0" ci="12" mb="0" cb="2"/><line nr="523" mi="0" ci="5" mb="0" cb="0"/><line nr="524" mi="0" ci="1" mb="0" cb="0"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="537" mi="0" ci="3" mb="0" cb="2"/><line nr="538" mi="0" ci="12" mb="0" cb="2"/><line nr="539" mi="0" ci="15" mb="0" cb="4"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="2"/><line nr="558" mi="0" ci="12" mb="0" cb="2"/><line nr="559" mi="0" ci="15" mb="0" cb="4"/><line nr="560" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><line nr="565" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="2"/><line nr="579" mi="0" ci="12" mb="0" cb="2"/><line nr="580" mi="0" ci="9" mb="0" cb="2"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="1" mb="0" cb="0"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="0" ci="15" mb="0" cb="4"/><line nr="614" mi="0" ci="8" mb="0" cb="2"/><line nr="615" mi="0" ci="8" mb="0" cb="2"/><line nr="616" mi="0" ci="7" mb="0" cb="0"/><line nr="621" mi="0" ci="9" mb="0" cb="0"/><line nr="626" mi="0" ci="3" mb="0" cb="2"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="2"/><line nr="630" mi="0" ci="2" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="0"/><line nr="633" mi="0" ci="6" mb="0" cb="0"/><line nr="646" mi="0" ci="4" mb="0" cb="0"/><line nr="647" mi="0" ci="1" mb="0" cb="0"/><line nr="662" mi="0" ci="4" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="664" mi="0" ci="4" mb="0" cb="0"/><line nr="665" mi="0" ci="9" mb="0" cb="0"/><line nr="666" mi="0" ci="3" mb="0" cb="0"/><line nr="667" mi="0" ci="9" mb="0" cb="0"/><line nr="668" mi="0" ci="3" mb="0" cb="0"/><line nr="669" mi="0" ci="7" mb="0" cb="0"/><line nr="670" mi="0" ci="2" mb="0" cb="0"/><line nr="685" mi="0" ci="4" mb="0" cb="0"/><line nr="686" mi="0" ci="7" mb="0" cb="0"/><line nr="687" mi="0" ci="8" mb="0" cb="0"/><line nr="688" mi="0" ci="7" mb="0" cb="0"/><line nr="689" mi="0" ci="1" mb="0" cb="0"/><line nr="690" mi="0" ci="1" mb="0" cb="0"/><line nr="691" mi="0" ci="2" mb="0" cb="0"/><line nr="706" mi="0" ci="5" mb="0" cb="0"/><line nr="707" mi="0" ci="6" mb="0" cb="0"/><line nr="708" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="1394"/><counter type="BRANCH" missed="1" covered="103"/><counter type="LINE" missed="0" covered="220"/><counter type="COMPLEXITY" missed="1" covered="96"/><counter type="METHOD" missed="0" covered="45"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractMatrixBuilder.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BigIntVector.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="15" mb="0" cb="2"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="15" mb="0" cb="2"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="12" mb="0" cb="2"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="16" mb="0" cb="2"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="14" mb="0" cb="4"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="236" mi="0" ci="8" mb="0" cb="2"/><line nr="237" mi="0" ci="9" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="14" mb="0" cb="4"/><line nr="266" mi="0" ci="8" mb="0" cb="2"/><line nr="267" mi="0" ci="10" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="16" mb="0" cb="2"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="12" mb="0" cb="2"/><line nr="289" mi="0" ci="13" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="16" mb="0" cb="2"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="16" mb="0" cb="2"/><line nr="335" mi="0" ci="8" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="16" mb="0" cb="2"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="14" mb="0" cb="4"/><line nr="366" mi="0" ci="9" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="0" ci="16" mb="0" cb="2"/><line nr="394" mi="0" ci="8" mb="0" cb="2"/><line nr="395" mi="0" ci="10" mb="0" cb="0"/><line nr="428" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="16" mb="0" cb="2"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="431" mi="0" ci="14" mb="0" cb="4"/><line nr="433" mi="0" ci="8" mb="0" cb="2"/><line nr="434" mi="0" ci="11" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="447" mi="0" ci="12" mb="0" cb="2"/><line nr="448" mi="0" ci="5" mb="0" cb="0"/><line nr="449" mi="0" ci="1" mb="0" cb="0"/><line nr="450" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="4" mb="0" cb="0"/><line nr="471" mi="0" ci="16" mb="0" cb="2"/><line nr="472" mi="0" ci="5" mb="0" cb="0"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="497" mi="0" ci="8" mb="0" cb="2"/><line nr="498" mi="0" ci="7" mb="0" cb="0"/><line nr="503" mi="0" ci="9" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="2"/><line nr="509" mi="0" ci="2" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="2"/><line nr="512" mi="0" ci="2" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="6" mb="0" cb="0"/><line nr="528" mi="0" ci="4" mb="0" cb="0"/><line nr="529" mi="0" ci="1" mb="0" cb="0"/><line nr="547" mi="0" ci="4" mb="0" cb="0"/><line nr="548" mi="0" ci="6" mb="0" cb="0"/><line nr="549" mi="1" ci="13" mb="1" cb="1"/><line nr="550" mi="0" ci="7" mb="0" cb="0"/><line nr="551" mi="0" ci="2" mb="0" cb="0"/><line nr="572" mi="0" ci="4" mb="0" cb="0"/><line nr="573" mi="0" ci="4" mb="0" cb="0"/><line nr="574" mi="0" ci="17" mb="0" cb="4"/><line nr="575" mi="0" ci="6" mb="0" cb="0"/><line nr="576" mi="0" ci="2" mb="0" cb="0"/><line nr="591" mi="0" ci="4" mb="0" cb="0"/><line nr="592" mi="0" ci="8" mb="0" cb="2"/><line nr="593" mi="0" ci="7" mb="0" cb="0"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="610" mi="0" ci="11" mb="0" cb="0"/><line nr="611" mi="0" ci="8" mb="0" cb="0"/><line nr="612" mi="0" ci="1" mb="0" cb="0"/><line nr="613" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="718"/><counter type="BRANCH" missed="1" covered="63"/><counter type="LINE" missed="0" covered="110"/><counter type="COMPLEXITY" missed="1" covered="64"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="109" covered="8835"/><counter type="BRANCH" missed="24" covered="686"/><counter type="LINE" missed="16" covered="1394"/><counter type="COMPLEXITY" missed="25" covered="678"/><counter type="METHOD" missed="4" covered="344"/><counter type="CLASS" missed="0" covered="20"/></package><package name="com/github/ltennstedt/finnmath/number"><class name="com/github/ltennstedt/finnmath/number/RealComplexNumber"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="108"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="125"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="143"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="166"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;Ljava/math/RoundingMode;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="191"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(I)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="217"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="235"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invert" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="251"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invertible" desc="()Z" line="264"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="()Ljava/math/BigDecimal;" line="277"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absPow2" desc="()Ljava/math/BigDecimal;" line="289"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="conjugate" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="301"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="()Ljava/math/BigDecimal;" line="316"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(I)Ljava/math/BigDecimal;" line="336"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(Ljava/math/RoundingMode;)Ljava/math/BigDecimal;" line="357"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="382"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(Ljava/math/MathContext;)Ljava/math/BigDecimal;" line="404"><counter type="INSTRUCTION" missed="6" covered="86"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="()Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="433"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="(I)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="453"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="(Ljava/math/RoundingMode;)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="474"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="(ILjava/math/RoundingMode;)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="499"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="(Ljava/math/MathContext;)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="522"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqualToByComparingParts" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)Z" line="541"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matrix" desc="()Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="555"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="561"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="566"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="708"/><counter type="BRANCH" missed="3" covered="55"/><counter type="LINE" missed="2" covered="91"/><counter type="COMPLEXITY" missed="3" covered="55"/><counter type="METHOD" missed="0" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/number/ScientificNotation"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;I)V" line="59"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="95"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCoefficient" desc="()Ljava/math/BigDecimal;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExponent" desc="()I" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/number/Fraction"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;Ljava/math/BigInteger;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intValue" desc="()I" line="97"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longValue" desc="()J" line="110"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="floatValue" desc="()F" line="123"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleValue" desc="()D" line="136"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="156"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="180"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="204"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="231"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(I)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="253"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/number/Fraction;" line="275"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invert" desc="()Lcom/github/ltennstedt/finnmath/number/Fraction;" line="293"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invertible" desc="()Z" line="306"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="()Lcom/github/ltennstedt/finnmath/number/Fraction;" line="323"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)I" line="339"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lessThanOrEqualTo" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Z" line="360"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThanOrEqualTo" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Z" line="381"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lessThan" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Z" line="396"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThan" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Z" line="412"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="431"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="453"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="()Lcom/github/ltennstedt/finnmath/number/Fraction;" line="475"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduce" desc="()Lcom/github/ltennstedt/finnmath/number/Fraction;" line="499"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signum" desc="()I" line="512"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equivalent" desc="(Lcom/github/ltennstedt/finnmath/number/Fraction;)Z" line="528"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="534"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="539"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="551"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumerator" desc="()Ljava/math/BigInteger;" line="555"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDenominator" desc="()Ljava/math/BigInteger;" line="559"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="495"/><counter type="BRANCH" missed="0" covered="42"/><counter type="LINE" missed="0" covered="87"/><counter type="COMPLEXITY" missed="0" covered="52"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/number/AbstractComplexNumber"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReal" desc="()Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImaginary" desc="()Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/number/PolarForm"><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexNumber" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexNumber" desc="(I)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="98"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexNumber" desc="(Ljava/math/RoundingMode;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="114"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexNumber" desc="(ILjava/math/RoundingMode;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="134"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexNumber" desc="(Ljava/math/MathContext;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="151"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="complexNumer" desc="(Lch/obermuhlner/math/big/BigFloat$Context;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="156"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="163"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="168"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="180"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRadial" desc="()Ljava/math/BigDecimal;" line="184"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAngular" desc="()Ljava/math/BigDecimal;" line="188"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/number/RealComplexNumber$RealComplexNumberComparator"><method name="&lt;init&gt;" desc="()V" line="584"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;)I" line="589"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/number/SimpleComplexNumber"><method name="&lt;init&gt;" desc="(Ljava/math/BigInteger;Ljava/math/BigInteger;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="86"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtract" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="103"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="121"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="144"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;Ljava/math/RoundingMode;)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="170"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(I)Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="190"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="208"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invert" desc="()Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="224"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invertible" desc="()Z" line="237"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="abs" desc="()Ljava/math/BigDecimal;" line="250"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absPow2" desc="()Ljava/math/BigInteger;" line="262"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="conjugate" desc="()Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="274"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="()Ljava/math/BigDecimal;" line="289"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(I)Ljava/math/BigDecimal;" line="309"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(Ljava/math/RoundingMode;)Ljava/math/BigDecimal;" line="330"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;" line="355"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argument" desc="(Ljava/math/MathContext;)Ljava/math/BigDecimal;" line="377"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="()Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="394"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="(I)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="414"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="(Ljava/math/RoundingMode;)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="435"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="(ILjava/math/RoundingMode;)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="460"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="polarForm" desc="(Ljava/math/MathContext;)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="482"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matrix" desc="()Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="498"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="504"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="509"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="551"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="0" covered="49"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RealComplexNumber.java"><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="14" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="18" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="14" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="16" mb="0" cb="0"/><line nr="145" mi="0" ci="16" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="12" mb="0" cb="0"/><line nr="195" mi="0" ci="17" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="11" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="9" mb="0" cb="2"/><line nr="218" mi="0" ci="3" mb="0" cb="2"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="2"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="12" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="8" mb="0" cb="2"/><line nr="277" mi="0" ci="7" mb="0" cb="0"/><line nr="289" mi="0" ci="12" mb="0" cb="0"/><line nr="301" mi="0" ci="11" mb="0" cb="0"/><line nr="316" mi="0" ci="10" mb="0" cb="2"/><line nr="317" mi="0" ci="7" mb="0" cb="0"/><line nr="336" mi="0" ci="10" mb="0" cb="2"/><line nr="337" mi="0" ci="9" mb="0" cb="2"/><line nr="338" mi="0" ci="7" mb="0" cb="0"/><line nr="357" mi="0" ci="10" mb="0" cb="2"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="382" mi="0" ci="10" mb="0" cb="2"/><line nr="383" mi="0" ci="9" mb="0" cb="2"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="8" mb="0" cb="0"/><line nr="404" mi="0" ci="18" mb="0" cb="4"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="0"/><line nr="408" mi="0" ci="6" mb="0" cb="2"/><line nr="409" mi="0" ci="12" mb="0" cb="0"/><line nr="410" mi="0" ci="6" mb="0" cb="2"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="414" mi="0" ci="13" mb="1" cb="1"/><line nr="415" mi="4" ci="0" mb="0" cb="0"/><line nr="417" mi="0" ci="9" mb="0" cb="0"/><line nr="418" mi="2" ci="9" mb="1" cb="1"/><line nr="433" mi="0" ci="10" mb="0" cb="2"/><line nr="434" mi="0" ci="7" mb="0" cb="0"/><line nr="453" mi="0" ci="10" mb="0" cb="2"/><line nr="454" mi="0" ci="9" mb="0" cb="2"/><line nr="455" mi="0" ci="7" mb="0" cb="0"/><line nr="474" mi="0" ci="10" mb="0" cb="2"/><line nr="475" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="8" mb="0" cb="0"/><line nr="499" mi="0" ci="10" mb="0" cb="2"/><line nr="500" mi="0" ci="9" mb="0" cb="2"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="8" mb="0" cb="0"/><line nr="522" mi="0" ci="10" mb="0" cb="2"/><line nr="523" mi="0" ci="4" mb="0" cb="0"/><line nr="524" mi="0" ci="9" mb="0" cb="0"/><line nr="541" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="20" mb="0" cb="4"/><line nr="555" mi="0" ci="30" mb="0" cb="0"/><line nr="556" mi="0" ci="8" mb="0" cb="0"/><line nr="561" mi="0" ci="14" mb="0" cb="0"/><line nr="566" mi="0" ci="3" mb="0" cb="2"/><line nr="567" mi="0" ci="2" mb="0" cb="0"/><line nr="569" mi="0" ci="3" mb="1" cb="1"/><line nr="570" mi="2" ci="0" mb="0" cb="0"/><line nr="572" mi="0" ci="3" mb="0" cb="0"/><line nr="573" mi="0" ci="18" mb="0" cb="4"/><line nr="584" mi="0" ci="2" mb="0" cb="0"/><line nr="585" mi="0" ci="1" mb="0" cb="0"/><line nr="589" mi="0" ci="2" mb="0" cb="2"/><line nr="590" mi="0" ci="2" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="2"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="595" mi="0" ci="4" mb="0" cb="2"/><line nr="596" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="8" covered="733"/><counter type="BRANCH" missed="3" covered="63"/><counter type="LINE" missed="2" covered="100"/><counter type="COMPLEXITY" missed="3" covered="61"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Fraction.java"><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="14" mb="0" cb="0"/><line nr="110" mi="0" ci="14" mb="0" cb="0"/><line nr="123" mi="0" ci="14" mb="0" cb="0"/><line nr="136" mi="0" ci="14" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="11" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="9" mb="0" cb="2"/><line nr="254" mi="0" ci="3" mb="0" cb="2"/><line nr="255" mi="0" ci="8" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="2"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="9" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="0"/><line nr="306" mi="0" ci="9" mb="0" cb="2"/><line nr="323" mi="0" ci="10" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="2"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="2"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="6" mb="0" cb="0"/><line nr="365" mi="0" ci="9" mb="0" cb="2"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="12" mb="0" cb="4"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="8" mb="0" cb="2"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="8" mb="0" cb="2"/><line nr="431" mi="0" ci="4" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="0" cb="2"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="4" mb="0" cb="2"/><line nr="455" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="2"/><line nr="476" mi="0" ci="11" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="2"/><line nr="479" mi="0" ci="2" mb="0" cb="0"/><line nr="481" mi="0" ci="5" mb="0" cb="2"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="0" ci="6" mb="0" cb="0"/><line nr="500" mi="0" ci="12" mb="0" cb="0"/><line nr="512" mi="0" ci="8" mb="0" cb="0"/><line nr="528" mi="0" ci="4" mb="0" cb="0"/><line nr="529" mi="0" ci="8" mb="0" cb="0"/><line nr="534" mi="0" ci="14" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="2"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="542" mi="0" ci="3" mb="0" cb="2"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="545" mi="0" ci="3" mb="0" cb="0"/><line nr="546" mi="0" ci="16" mb="0" cb="4"/><line nr="551" mi="0" ci="12" mb="0" cb="0"/><line nr="555" mi="0" ci="3" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="495"/><counter type="BRANCH" missed="0" covered="42"/><counter type="LINE" missed="0" covered="87"/><counter type="COMPLEXITY" missed="0" covered="52"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleComplexNumber.java"><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="18" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="14" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="16" mb="0" cb="0"/><line nr="123" mi="0" ci="16" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="11" mb="0" cb="0"/><line nr="190" mi="0" ci="9" mb="0" cb="2"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="2"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="12" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="8" mb="0" cb="2"/><line nr="250" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="12" mb="0" cb="0"/><line nr="274" mi="0" ci="11" mb="0" cb="0"/><line nr="289" mi="0" ci="10" mb="0" cb="2"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="309" mi="0" ci="10" mb="0" cb="2"/><line nr="310" mi="0" ci="9" mb="0" cb="2"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="330" mi="0" ci="10" mb="0" cb="2"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="8" mb="0" cb="0"/><line nr="355" mi="0" ci="10" mb="0" cb="2"/><line nr="356" mi="0" ci="9" mb="0" cb="2"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="8" mb="0" cb="0"/><line nr="377" mi="0" ci="10" mb="0" cb="2"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="7" mb="0" cb="0"/><line nr="394" mi="0" ci="10" mb="0" cb="2"/><line nr="395" mi="0" ci="7" mb="0" cb="0"/><line nr="414" mi="0" ci="10" mb="0" cb="2"/><line nr="415" mi="0" ci="9" mb="0" cb="2"/><line nr="416" mi="0" ci="7" mb="0" cb="0"/><line nr="435" mi="0" ci="10" mb="0" cb="2"/><line nr="436" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="8" mb="0" cb="0"/><line nr="460" mi="0" ci="10" mb="0" cb="2"/><line nr="461" mi="0" ci="9" mb="0" cb="2"/><line nr="462" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="8" mb="0" cb="0"/><line nr="482" mi="0" ci="10" mb="0" cb="2"/><line nr="483" mi="0" ci="4" mb="0" cb="0"/><line nr="484" mi="0" ci="7" mb="0" cb="0"/><line nr="498" mi="0" ci="30" mb="0" cb="0"/><line nr="499" mi="0" ci="8" mb="0" cb="0"/><line nr="504" mi="0" ci="14" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="2"/><line nr="510" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="0" ci="3" mb="0" cb="2"/><line nr="513" mi="0" ci="2" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="516" mi="0" ci="18" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="551"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="0" covered="49"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractComplexNumber.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolarForm.java"><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="2"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="9" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="9" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="10" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="14" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="16" mb="0" cb="4"/><line nr="180" mi="0" ci="12" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ScientificNotation.java"><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="14" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="2"/><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="13" mb="0" cb="0"/><line nr="90" mi="0" ci="15" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="15" mb="0" cb="4"/><line nr="107" mi="0" ci="12" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="2113"/><counter type="BRANCH" missed="3" covered="177"/><counter type="LINE" missed="2" covered="319"/><counter type="COMPLEXITY" missed="3" covered="200"/><counter type="METHOD" missed="0" covered="113"/><counter type="CLASS" missed="0" covered="7"/></package><package name="com/github/ltennstedt/finnmath/util"><class name="com/github/ltennstedt/finnmath/util/MathRandom"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="84"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPositiveLong" desc="(J)J" line="100"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNegativeLong" desc="(J)J" line="116"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLong" desc="(J)J" line="132"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPositiveLongs" desc="(JI)[J" line="156"><counter type="INSTRUCTION" missed="1" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNegativeLongs" desc="(JI)[J" line="182"><counter type="INSTRUCTION" missed="1" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLongs" desc="(JI)[J" line="208"><counter type="INSTRUCTION" missed="1" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPositiveDecimal" desc="(JI)Ljava/math/BigDecimal;" line="234"><counter type="INSTRUCTION" missed="3" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNegativeDecimal" desc="(JI)Ljava/math/BigDecimal;" line="260"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDecimal" desc="(JI)Ljava/math/BigDecimal;" line="286"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertiblePositiveDecimal" desc="(JI)Ljava/math/BigDecimal;" line="309"><counter type="INSTRUCTION" missed="3" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleNegativeDecimal" desc="(JI)Ljava/math/BigDecimal;" line="336"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleDecimal" desc="(JI)Ljava/math/BigDecimal;" line="362"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keepDecimalInBound" desc="(Ljava/math/BigDecimal;J)Ljava/math/BigDecimal;" line="370"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPositiveDecimals" desc="(JII)Ljava/util/List;" line="405"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNegativeDecimals" desc="(JII)Ljava/util/List;" line="436"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDecimals" desc="(JII)Ljava/util/List;" line="467"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertiblePositiveDecimals" desc="(JII)Ljava/util/List;" line="499"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleNegativeDecimals" desc="(JII)Ljava/util/List;" line="531"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleDecimals" desc="(JII)Ljava/util/List;" line="563"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPositiveFraction" desc="(J)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="587"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNegativeFraction" desc="(J)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="607"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextFraction" desc="(J)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="625"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertiblePositiveFraction" desc="(J)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="645"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleNegativeFraction" desc="(J)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="664"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleFraction" desc="(J)Lcom/github/ltennstedt/finnmath/number/Fraction;" line="681"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPositiveFractions" desc="(JI)Ljava/util/List;" line="705"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextNegativeFractions" desc="(JI)Ljava/util/List;" line="731"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextFractions" desc="(JI)Ljava/util/List;" line="757"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertiblePositiveFractions" desc="(JI)Ljava/util/List;" line="784"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleNegativeFractions" desc="(JI)Ljava/util/List;" line="811"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleFractions" desc="(JI)Ljava/util/List;" line="837"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSimpleComplexNumber" desc="(J)Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="859"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleSimpleComplexNumber" desc="(J)Lcom/github/ltennstedt/finnmath/number/SimpleComplexNumber;" line="878"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSimpleComplexNumbers" desc="(JI)Ljava/util/List;" line="904"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleSimpleComplexNumbers" desc="(JI)Ljava/util/List;" line="931"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextRealComplexNumber" desc="(JI)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="955"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleRealComplexNumber" desc="(JI)Lcom/github/ltennstedt/finnmath/number/RealComplexNumber;" line="977"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextRealComplexNumbers" desc="(JII)Ljava/util/List;" line="1009"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInvertibleRealComplexNumbers" desc="(JII)Ljava/util/List;" line="1042"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPolarForm" desc="(JI)Lcom/github/ltennstedt/finnmath/number/PolarForm;" line="1069"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPolarForms" desc="(JII)Ljava/util/List;" line="1095"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBigIntVector" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/BigIntVector;" line="1122"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBigIntVectors" desc="(JII)Ljava/util/List;" line="1150"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBigIntMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="1181"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextUpperTriangularBigIntMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="1211"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLowerTriangularBigIntMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="1244"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTriangularBigIntMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="1278"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDiagonalBigIntMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="1303"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSymmetricBigIntMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="1335"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSkewSymmetricBigIntMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix;" line="1370"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBigIntMatrices" desc="(JIII)Ljava/util/List;" line="1414"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextUpperTriangularBigIntMatrices" desc="(JII)Ljava/util/List;" line="1447"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLowerTriangularBigIntMatrices" desc="(JII)Ljava/util/List;" line="1479"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTriangularBigIntMatrices" desc="(JII)Ljava/util/List;" line="1510"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDiagonalBigIntMatrices" desc="(JII)Ljava/util/List;" line="1541"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSymmetricBigIntMatrices" desc="(JII)Ljava/util/List;" line="1572"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSkewSymmetricBigIntMatrices" desc="(JII)Ljava/util/List;" line="1604"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDecimalVector" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/DecimalVector;" line="1635"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDecimalVectors" desc="(JIII)Ljava/util/List;" line="1673"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDecimalMatrix" desc="(JIII)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="1709"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextUpperTriangularDecimalMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="1744"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLowerTriangularDecimalMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="1781"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTriangularDecimalMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="1819"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDiagonalDecimalMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="1848"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSymmetricDecimalMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="1884"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSkewSymmetricDecimalMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix;" line="1923"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDecimalMatrices" desc="(JIIII)Ljava/util/List;" line="1972"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextUpperTriangularDecimalMatrices" desc="(JIII)Ljava/util/List;" line="2011"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLowerTriangularDecimalMatrices" desc="(JIII)Ljava/util/List;" line="2049"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTriangularDecimalMatrices" desc="(JIII)Ljava/util/List;" line="2086"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDiagonalDecimalMatrices" desc="(JIII)Ljava/util/List;" line="2123"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSymmetricDecimalMatrices" desc="(JIII)Ljava/util/List;" line="2160"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSkewSymmetricDecimalMatrices" desc="(JIII)Ljava/util/List;" line="2198"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSimpleComplexNumberVector" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberVector;" line="2226"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSimpleComplexNumberVectors" desc="(JII)Ljava/util/List;" line="2256"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSimpleComplexNumberMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="2288"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextUpperTriangularSimpleComplexNumberMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="2318"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLowerTriangularSimpleComplexNumberMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="2351"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTriangularSimpleComplexNumberMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="2385"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDiagonalSimpleComplexNumberMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="2410"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSymmetricSimpleComplexNumberMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="2442"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSkewSymmetricSimpleComplexNumberMatrix" desc="(JI)Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix;" line="2477"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSimpleComplexNumberMatrices" desc="(JIII)Ljava/util/List;" line="2522"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextUpperTriangularSimpleComplexNumberMatrices" desc="(JII)Ljava/util/List;" line="2557"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLowerTriangularSimpleComplexNumberMatrices" desc="(JII)Ljava/util/List;" line="2591"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTriangularSimpleComplexNumberMatrices" desc="(JII)Ljava/util/List;" line="2624"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDiagonalSimpleComplexNumberMatrices" desc="(JII)Ljava/util/List;" line="2657"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSymmetricSimpleComplexNumberMatrices" desc="(JII)Ljava/util/List;" line="2690"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSkewSymmetricSimpleComplexNumberMatrices" desc="(JII)Ljava/util/List;" line="2724"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextRealComplexNumberVector" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberVector;" line="2755"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextRealComplexNumberVectors" desc="(JIII)Ljava/util/List;" line="2790"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextRealComplexNumberMatrix" desc="(JIII)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="2827"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextUpperTriangularRealComplexNumberMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="2863"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLowerTriangularRealComplexNumberMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="2902"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTriangularRealComplexNumberMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="2942"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDiagonalRealComplexNumberMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="2973"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSymmetricRealComplexNumberMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="3011"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSkewSymmetricRealComplexNumberMatrix" desc="(JII)Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix;" line="3052"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextRealComplexNumberMatrices" desc="(JIIII)Ljava/util/List;" line="3102"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextUpperTriangularRealComplexNumberMatrices" desc="(JIII)Ljava/util/List;" line="3142"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLowerTriangularRealComplexNumberMatrices" desc="(JIII)Ljava/util/List;" line="3181"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTriangularRealComplexNumberMatrices" desc="(JIII)Ljava/util/List;" line="3219"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextDiagonalRealComplexNumberMatrices" desc="(JIII)Ljava/util/List;" line="3257"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSymmetricRealComplexNumberMatrices" desc="(JIII)Ljava/util/List;" line="3295"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSkewSymmetricRealComplexNumberMatrices" desc="(JIII)Ljava/util/List;" line="3333"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="3346"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRandom" desc="()Ljava/util/Random;" line="3351"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSkewSymmetricRealComplexNumberMatrix$47" desc="(IJILcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Ljava/lang/Integer;)V" line="3057"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSkewSymmetricRealComplexNumberMatrix$46" desc="(Ljava/lang/Integer;JILcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Ljava/lang/Integer;)V" line="3058"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSymmetricRealComplexNumberMatrix$45" desc="(IJILcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Ljava/lang/Integer;)V" line="3016"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSymmetricRealComplexNumberMatrix$44" desc="(JILjava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Ljava/lang/Integer;)V" line="3017"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDiagonalRealComplexNumberMatrix$43" desc="(ILcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;JILjava/lang/Integer;)V" line="2978"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDiagonalRealComplexNumberMatrix$42" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;JILjava/lang/Integer;)V" line="2979"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextLowerTriangularRealComplexNumberMatrix$41" desc="(ILcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;JILjava/lang/Integer;)V" line="2907"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextLowerTriangularRealComplexNumberMatrix$40" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;JILjava/lang/Integer;)V" line="2908"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextUpperTriangularRealComplexNumberMatrix$39" desc="(ILcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;JILjava/lang/Integer;)V" line="2868"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextUpperTriangularRealComplexNumberMatrix$38" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;JILjava/lang/Integer;)V" line="2869"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextRealComplexNumberMatrix$37" desc="(ILcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;JILjava/lang/Integer;)V" line="2833"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextRealComplexNumberMatrix$36" desc="(Lcom/github/ltennstedt/finnmath/linear/RealComplexNumberMatrix$RealComplexNumberMatrixBuilder;Ljava/lang/Integer;JILjava/lang/Integer;)V" line="2834"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSkewSymmetricSimpleComplexNumberMatrix$35" desc="(IJLcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Ljava/lang/Integer;)V" line="2481"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSkewSymmetricSimpleComplexNumberMatrix$34" desc="(Ljava/lang/Integer;JLcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Ljava/lang/Integer;)V" line="2482"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSymmetricSimpleComplexNumberMatrix$33" desc="(IJLcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Ljava/lang/Integer;)V" line="2446"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSymmetricSimpleComplexNumberMatrix$32" desc="(JLjava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Ljava/lang/Integer;)V" line="2447"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDiagonalSimpleComplexNumberMatrix$31" desc="(ILcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;JLjava/lang/Integer;)V" line="2414"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDiagonalSimpleComplexNumberMatrix$30" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;JLjava/lang/Integer;)V" line="2415"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextLowerTriangularSimpleComplexNumberMatrix$29" desc="(ILcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;JLjava/lang/Integer;)V" line="2355"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextLowerTriangularSimpleComplexNumberMatrix$28" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;JLjava/lang/Integer;)V" line="2356"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextUpperTriangularSimpleComplexNumberMatrix$27" desc="(ILcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;JLjava/lang/Integer;)V" line="2322"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextUpperTriangularSimpleComplexNumberMatrix$26" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;JLjava/lang/Integer;)V" line="2323"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSimpleComplexNumberMatrix$25" desc="(ILcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;JLjava/lang/Integer;)V" line="2293"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSimpleComplexNumberMatrix$24" desc="(Lcom/github/ltennstedt/finnmath/linear/SimpleComplexNumberMatrix$SimpleComplexNumberMatrixBuilder;Ljava/lang/Integer;JLjava/lang/Integer;)V" line="2294"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSkewSymmetricDecimalMatrix$23" desc="(IJILcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Ljava/lang/Integer;)V" line="1927"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSkewSymmetricDecimalMatrix$22" desc="(Ljava/lang/Integer;JILcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Ljava/lang/Integer;)V" line="1928"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSymmetricDecimalMatrix$21" desc="(IJILcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Ljava/lang/Integer;)V" line="1888"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSymmetricDecimalMatrix$20" desc="(JILjava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Ljava/lang/Integer;)V" line="1889"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDiagonalDecimalMatrix$19" desc="(ILcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;JILjava/lang/Integer;)V" line="1852"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDiagonalDecimalMatrix$18" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;JILjava/lang/Integer;)V" line="1853"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextLowerTriangularDecimalMatrix$17" desc="(ILcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;JILjava/lang/Integer;)V" line="1785"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextLowerTriangularDecimalMatrix$16" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;JILjava/lang/Integer;)V" line="1786"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextUpperTriangularDecimalMatrix$15" desc="(ILcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;JILjava/lang/Integer;)V" line="1748"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextUpperTriangularDecimalMatrix$14" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;JILjava/lang/Integer;)V" line="1749"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDecimalMatrix$13" desc="(ILcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;JILjava/lang/Integer;)V" line="1715"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDecimalMatrix$12" desc="(Lcom/github/ltennstedt/finnmath/linear/DecimalMatrix$DecimalMatrixBuilder;Ljava/lang/Integer;JILjava/lang/Integer;)V" line="1716"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSkewSymmetricBigIntMatrix$11" desc="(IJLcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Ljava/lang/Integer;)V" line="1374"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSkewSymmetricBigIntMatrix$10" desc="(Ljava/lang/Integer;JLcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Ljava/lang/Integer;)V" line="1375"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSymmetricBigIntMatrix$9" desc="(IJLcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Ljava/lang/Integer;)V" line="1339"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextSymmetricBigIntMatrix$8" desc="(JLjava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Ljava/lang/Integer;)V" line="1340"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDiagonalBigIntMatrix$7" desc="(ILcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;JLjava/lang/Integer;)V" line="1307"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextDiagonalBigIntMatrix$6" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;JLjava/lang/Integer;)V" line="1308"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextLowerTriangularBigIntMatrix$5" desc="(ILcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;JLjava/lang/Integer;)V" line="1248"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextLowerTriangularBigIntMatrix$4" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;JLjava/lang/Integer;)V" line="1249"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextUpperTriangularBigIntMatrix$3" desc="(ILcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;JLjava/lang/Integer;)V" line="1215"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextUpperTriangularBigIntMatrix$2" desc="(Ljava/lang/Integer;Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;JLjava/lang/Integer;)V" line="1216"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextBigIntMatrix$1" desc="(ILcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;JLjava/lang/Integer;)V" line="1186"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$nextBigIntMatrix$0" desc="(Lcom/github/ltennstedt/finnmath/linear/BigIntMatrix$BigIntMatrixBuilder;Ljava/lang/Integer;JLjava/lang/Integer;)V" line="1187"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="5398"/><counter type="BRANCH" missed="6" covered="742"/><counter type="LINE" missed="3" covered="809"/><counter type="COMPLEXITY" missed="6" covered="525"/><counter type="METHOD" missed="0" covered="157"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/ltennstedt/finnmath/util/SquareRootCalculator"><method name="&lt;init&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/math/RoundingMode;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sqrt" desc="(Ljava/math/BigInteger;)Ljava/math/BigDecimal;" line="169"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sqrt" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="189"><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sqrtOfPerfectSquare" desc="(Ljava/math/BigInteger;)Ljava/math/BigInteger;" line="212"><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perfectSquare" desc="(Ljava/math/BigInteger;)Z" line="232"><counter type="INSTRUCTION" missed="1" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="heronsMethod" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="242"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateSuccessor" desc="(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="260"><counter type="INSTRUCTION" missed="1" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="seedValue" desc="(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;" line="270"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scientificNotationForSqrt" desc="(Ljava/math/BigDecimal;)Lcom/github/ltennstedt/finnmath/number/ScientificNotation;" line="280"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="297"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrecision" desc="()Ljava/math/BigDecimal;" line="302"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScale" desc="()I" line="306"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoundingMode" desc="()Ljava/math/RoundingMode;" line="310"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="436"/><counter type="BRANCH" missed="4" covered="26"/><counter type="LINE" missed="0" covered="88"/><counter type="COMPLEXITY" missed="4" covered="28"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MathRandom.java"><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="10" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="0" cb="2"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="1" ci="9" mb="1" cb="1"/><line nr="157" mi="0" ci="8" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="2"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="1" ci="9" mb="1" cb="1"/><line nr="183" mi="0" ci="8" mb="0" cb="2"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="2"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="1" ci="9" mb="1" cb="1"/><line nr="209" mi="0" ci="8" mb="0" cb="2"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="2"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="10" mb="0" cb="2"/><line nr="235" mi="0" ci="9" mb="0" cb="2"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="1" cb="1"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="10" mb="0" cb="2"/><line nr="261" mi="0" ci="9" mb="0" cb="2"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="2"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="10" mb="0" cb="2"/><line nr="287" mi="0" ci="9" mb="0" cb="2"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="8" mb="0" cb="0"/><line nr="309" mi="0" ci="10" mb="0" cb="2"/><line nr="310" mi="0" ci="9" mb="0" cb="2"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="1" cb="1"/><line nr="313" mi="3" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="336" mi="0" ci="10" mb="0" cb="2"/><line nr="337" mi="0" ci="9" mb="0" cb="2"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="1" cb="1"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="2" ci="0" mb="0" cb="0"/><line nr="362" mi="0" ci="10" mb="0" cb="2"/><line nr="363" mi="0" ci="9" mb="0" cb="2"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="8" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="2"/><line nr="373" mi="0" ci="5" mb="0" cb="2"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="6" mb="0" cb="2"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="381" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="10" mb="0" cb="2"/><line nr="406" mi="0" ci="9" mb="0" cb="2"/><line nr="407" mi="0" ci="8" mb="0" cb="2"/><line nr="408" mi="0" ci="5" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="2"/><line nr="410" mi="0" ci="7" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="10" mb="0" cb="2"/><line nr="437" mi="0" ci="9" mb="0" cb="2"/><line nr="438" mi="0" ci="8" mb="0" cb="2"/><line nr="439" mi="0" ci="5" mb="0" cb="0"/><line nr="440" mi="0" ci="7" mb="0" cb="2"/><line nr="441" mi="0" ci="7" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="467" mi="0" ci="10" mb="0" cb="2"/><line nr="468" mi="0" ci="9" mb="0" cb="2"/><line nr="469" mi="0" ci="8" mb="0" cb="2"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="7" mb="0" cb="2"/><line nr="472" mi="0" ci="7" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="0" ci="10" mb="0" cb="2"/><line nr="500" mi="0" ci="9" mb="0" cb="2"/><line nr="501" mi="0" ci="8" mb="0" cb="2"/><line nr="502" mi="0" ci="5" mb="0" cb="0"/><line nr="503" mi="0" ci="7" mb="0" cb="2"/><line nr="504" mi="0" ci="7" mb="0" cb="0"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="531" mi="0" ci="10" mb="0" cb="2"/><line nr="532" mi="0" ci="9" mb="0" cb="2"/><line nr="533" mi="0" ci="8" mb="0" cb="2"/><line nr="534" mi="0" ci="5" mb="0" cb="0"/><line nr="535" mi="0" ci="7" mb="0" cb="2"/><line nr="536" mi="0" ci="7" mb="0" cb="0"/><line nr="538" mi="0" ci="2" mb="0" cb="0"/><line nr="563" mi="0" ci="10" mb="0" cb="2"/><line nr="564" mi="0" ci="9" mb="0" cb="2"/><line nr="565" mi="0" ci="8" mb="0" cb="2"/><line nr="566" mi="0" ci="5" mb="0" cb="0"/><line nr="567" mi="0" ci="7" mb="0" cb="2"/><line nr="568" mi="0" ci="7" mb="0" cb="0"/><line nr="570" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="10" mb="0" cb="2"/><line nr="588" mi="0" ci="5" mb="0" cb="0"/><line nr="589" mi="0" ci="5" mb="0" cb="0"/><line nr="590" mi="0" ci="6" mb="0" cb="0"/><line nr="607" mi="0" ci="10" mb="0" cb="2"/><line nr="608" mi="0" ci="5" mb="0" cb="0"/><line nr="625" mi="0" ci="10" mb="0" cb="2"/><line nr="626" mi="0" ci="4" mb="0" cb="2"/><line nr="627" mi="0" ci="4" mb="0" cb="0"/><line nr="629" mi="0" ci="4" mb="0" cb="0"/><line nr="645" mi="0" ci="10" mb="0" cb="2"/><line nr="646" mi="0" ci="5" mb="0" cb="0"/><line nr="647" mi="0" ci="5" mb="0" cb="0"/><line nr="648" mi="0" ci="6" mb="0" cb="0"/><line nr="664" mi="0" ci="10" mb="0" cb="2"/><line nr="665" mi="0" ci="5" mb="0" cb="0"/><line nr="681" mi="0" ci="10" mb="0" cb="2"/><line nr="682" mi="0" ci="4" mb="0" cb="2"/><line nr="683" mi="0" ci="4" mb="0" cb="0"/><line nr="685" mi="0" ci="4" mb="0" cb="0"/><line nr="705" mi="0" ci="10" mb="0" cb="2"/><line nr="706" mi="0" ci="8" mb="0" cb="2"/><line nr="707" mi="0" ci="5" mb="0" cb="0"/><line nr="708" mi="0" ci="7" mb="0" cb="2"/><line nr="709" mi="0" ci="6" mb="0" cb="0"/><line nr="711" mi="0" ci="2" mb="0" cb="0"/><line nr="731" mi="0" ci="10" mb="0" cb="2"/><line nr="732" mi="0" ci="8" mb="0" cb="2"/><line nr="733" mi="0" ci="5" mb="0" cb="0"/><line nr="734" mi="0" ci="7" mb="0" cb="2"/><line nr="735" mi="0" ci="6" mb="0" cb="0"/><line nr="737" mi="0" ci="2" mb="0" cb="0"/><line nr="757" mi="0" ci="10" mb="0" cb="2"/><line nr="758" mi="0" ci="8" mb="0" cb="2"/><line nr="759" mi="0" ci="5" mb="0" cb="0"/><line nr="760" mi="0" ci="7" mb="0" cb="2"/><line nr="761" mi="0" ci="6" mb="0" cb="0"/><line nr="763" mi="0" ci="2" mb="0" cb="0"/><line nr="784" mi="0" ci="10" mb="0" cb="2"/><line nr="785" mi="0" ci="8" mb="0" cb="2"/><line nr="786" mi="0" ci="5" mb="0" cb="0"/><line nr="787" mi="0" ci="7" mb="0" cb="2"/><line nr="788" mi="0" ci="6" mb="0" cb="0"/><line nr="790" mi="0" ci="2" mb="0" cb="0"/><line nr="811" mi="0" ci="10" mb="0" cb="2"/><line nr="812" mi="0" ci="8" mb="0" cb="2"/><line nr="813" mi="0" ci="5" mb="0" cb="0"/><line nr="814" mi="0" ci="7" mb="0" cb="2"/><line nr="815" mi="0" ci="6" mb="0" cb="0"/><line nr="817" mi="0" ci="2" mb="0" cb="0"/><line nr="837" mi="0" ci="10" mb="0" cb="2"/><line nr="838" mi="0" ci="8" mb="0" cb="2"/><line nr="839" mi="0" ci="5" mb="0" cb="0"/><line nr="840" mi="0" ci="7" mb="0" cb="2"/><line nr="841" mi="0" ci="6" mb="0" cb="0"/><line nr="843" mi="0" ci="2" mb="0" cb="0"/><line nr="859" mi="0" ci="10" mb="0" cb="2"/><line nr="860" mi="0" ci="5" mb="0" cb="0"/><line nr="861" mi="0" ci="5" mb="0" cb="0"/><line nr="862" mi="0" ci="6" mb="0" cb="0"/><line nr="878" mi="0" ci="10" mb="0" cb="2"/><line nr="879" mi="0" ci="5" mb="0" cb="0"/><line nr="880" mi="0" ci="12" mb="0" cb="2"/><line nr="881" mi="0" ci="4" mb="0" cb="2"/><line nr="882" mi="0" ci="7" mb="0" cb="0"/><line nr="884" mi="0" ci="7" mb="0" cb="0"/><line nr="904" mi="0" ci="10" mb="0" cb="2"/><line nr="905" mi="0" ci="8" mb="0" cb="2"/><line nr="906" mi="0" ci="5" mb="0" cb="0"/><line nr="907" mi="0" ci="7" mb="0" cb="2"/><line nr="908" mi="0" ci="6" mb="0" cb="0"/><line nr="910" mi="0" ci="2" mb="0" cb="0"/><line nr="931" mi="0" ci="10" mb="0" cb="2"/><line nr="932" mi="0" ci="8" mb="0" cb="2"/><line nr="933" mi="0" ci="5" mb="0" cb="0"/><line nr="934" mi="0" ci="7" mb="0" cb="2"/><line nr="935" mi="0" ci="6" mb="0" cb="0"/><line nr="937" mi="0" ci="2" mb="0" cb="0"/><line nr="955" mi="0" ci="10" mb="0" cb="2"/><line nr="956" mi="0" ci="9" mb="0" cb="2"/><line nr="957" mi="0" ci="5" mb="0" cb="0"/><line nr="958" mi="0" ci="5" mb="0" cb="0"/><line nr="959" mi="0" ci="6" mb="0" cb="0"/><line nr="977" mi="0" ci="10" mb="0" cb="2"/><line nr="978" mi="0" ci="9" mb="0" cb="2"/><line nr="979" mi="0" ci="5" mb="0" cb="0"/><line nr="981" mi="0" ci="14" mb="0" cb="2"/><line nr="982" mi="0" ci="4" mb="0" cb="2"/><line nr="983" mi="0" ci="6" mb="0" cb="0"/><line nr="985" mi="0" ci="6" mb="0" cb="0"/><line nr="1009" mi="0" ci="10" mb="0" cb="2"/><line nr="1010" mi="0" ci="9" mb="0" cb="2"/><line nr="1011" mi="0" ci="8" mb="0" cb="2"/><line nr="1012" mi="0" ci="5" mb="0" cb="0"/><line nr="1013" mi="0" ci="7" mb="0" cb="2"/><line nr="1014" mi="0" ci="7" mb="0" cb="0"/><line nr="1016" mi="0" ci="2" mb="0" cb="0"/><line nr="1042" mi="0" ci="10" mb="0" cb="2"/><line nr="1043" mi="0" ci="9" mb="0" cb="2"/><line nr="1044" mi="0" ci="8" mb="0" cb="2"/><line nr="1045" mi="0" ci="5" mb="0" cb="0"/><line nr="1046" mi="0" ci="7" mb="0" cb="2"/><line nr="1047" mi="0" ci="7" mb="0" cb="0"/><line nr="1049" mi="0" ci="2" mb="0" cb="0"/><line nr="1069" mi="0" ci="10" mb="0" cb="2"/><line nr="1070" mi="0" ci="9" mb="0" cb="2"/><line nr="1071" mi="0" ci="12" mb="0" cb="0"/><line nr="1095" mi="0" ci="10" mb="0" cb="2"/><line nr="1096" mi="0" ci="9" mb="0" cb="2"/><line nr="1097" mi="0" ci="8" mb="0" cb="2"/><line nr="1098" mi="0" ci="5" mb="0" cb="0"/><line nr="1099" mi="0" ci="7" mb="0" cb="2"/><line nr="1100" mi="0" ci="7" mb="0" cb="0"/><line nr="1102" mi="0" ci="2" mb="0" cb="0"/><line nr="1122" mi="0" ci="10" mb="0" cb="2"/><line nr="1123" mi="0" ci="8" mb="0" cb="2"/><line nr="1124" mi="0" ci="3" mb="0" cb="0"/><line nr="1125" mi="0" ci="7" mb="0" cb="2"/><line nr="1126" mi="0" ci="7" mb="0" cb="0"/><line nr="1128" mi="0" ci="3" mb="0" cb="0"/><line nr="1150" mi="0" ci="10" mb="0" cb="2"/><line nr="1151" mi="0" ci="8" mb="0" cb="2"/><line nr="1152" mi="0" ci="8" mb="0" cb="2"/><line nr="1153" mi="0" ci="5" mb="0" cb="0"/><line nr="1154" mi="0" ci="7" mb="0" cb="2"/><line nr="1155" mi="0" ci="7" mb="0" cb="0"/><line nr="1157" mi="0" ci="2" mb="0" cb="0"/><line nr="1181" mi="0" ci="10" mb="0" cb="2"/><line nr="1182" mi="0" ci="8" mb="0" cb="2"/><line nr="1183" mi="0" ci="8" mb="0" cb="2"/><line nr="1184" mi="0" ci="4" mb="0" cb="0"/><line nr="1185" mi="0" ci="13" mb="0" cb="0"/><line nr="1186" mi="0" ci="13" mb="0" cb="0"/><line nr="1187" mi="0" ci="9" mb="0" cb="0"/><line nr="1188" mi="0" ci="1" mb="0" cb="0"/><line nr="1189" mi="0" ci="1" mb="0" cb="0"/><line nr="1190" mi="0" ci="3" mb="0" cb="0"/><line nr="1211" mi="0" ci="10" mb="0" cb="2"/><line nr="1212" mi="0" ci="8" mb="0" cb="2"/><line nr="1213" mi="0" ci="4" mb="0" cb="0"/><line nr="1214" mi="0" ci="13" mb="0" cb="0"/><line nr="1215" mi="0" ci="13" mb="0" cb="0"/><line nr="1216" mi="0" ci="5" mb="0" cb="2"/><line nr="1217" mi="0" ci="10" mb="0" cb="0"/><line nr="1219" mi="0" ci="6" mb="0" cb="0"/><line nr="1221" mi="0" ci="1" mb="0" cb="0"/><line nr="1222" mi="0" ci="1" mb="0" cb="0"/><line nr="1223" mi="0" ci="3" mb="0" cb="0"/><line nr="1244" mi="0" ci="10" mb="0" cb="2"/><line nr="1245" mi="0" ci="8" mb="0" cb="2"/><line nr="1246" mi="0" ci="4" mb="0" cb="0"/><line nr="1247" mi="0" ci="13" mb="0" cb="0"/><line nr="1248" mi="0" ci="13" mb="0" cb="0"/><line nr="1249" mi="0" ci="5" mb="0" cb="2"/><line nr="1250" mi="0" ci="10" mb="0" cb="0"/><line nr="1252" mi="0" ci="6" mb="0" cb="0"/><line nr="1254" mi="0" ci="1" mb="0" cb="0"/><line nr="1255" mi="0" ci="1" mb="0" cb="0"/><line nr="1256" mi="0" ci="3" mb="0" cb="0"/><line nr="1278" mi="0" ci="10" mb="0" cb="2"/><line nr="1279" mi="0" ci="8" mb="0" cb="2"/><line nr="1280" mi="0" ci="4" mb="0" cb="2"/><line nr="1281" mi="0" ci="5" mb="0" cb="0"/><line nr="1283" mi="0" ci="5" mb="0" cb="0"/><line nr="1303" mi="0" ci="10" mb="0" cb="2"/><line nr="1304" mi="0" ci="8" mb="0" cb="2"/><line nr="1305" mi="0" ci="4" mb="0" cb="0"/><line nr="1306" mi="0" ci="13" mb="0" cb="0"/><line nr="1307" mi="0" ci="13" mb="0" cb="0"/><line nr="1308" mi="0" ci="4" mb="0" cb="2"/><line nr="1309" mi="0" ci="10" mb="0" cb="0"/><line nr="1311" mi="0" ci="6" mb="0" cb="0"/><line nr="1313" mi="0" ci="1" mb="0" cb="0"/><line nr="1314" mi="0" ci="1" mb="0" cb="0"/><line nr="1315" mi="0" ci="3" mb="0" cb="0"/><line nr="1335" mi="0" ci="10" mb="0" cb="2"/><line nr="1336" mi="0" ci="8" mb="0" cb="2"/><line nr="1337" mi="0" ci="4" mb="0" cb="0"/><line nr="1338" mi="0" ci="13" mb="0" cb="0"/><line nr="1339" mi="0" ci="13" mb="0" cb="0"/><line nr="1340" mi="0" ci="5" mb="0" cb="0"/><line nr="1341" mi="0" ci="5" mb="0" cb="2"/><line nr="1342" mi="0" ci="6" mb="0" cb="0"/><line nr="1343" mi="0" ci="6" mb="0" cb="0"/><line nr="1345" mi="0" ci="4" mb="0" cb="2"/><line nr="1346" mi="0" ci="6" mb="0" cb="0"/><line nr="1348" mi="0" ci="1" mb="0" cb="0"/><line nr="1349" mi="0" ci="1" mb="0" cb="0"/><line nr="1350" mi="0" ci="3" mb="0" cb="0"/><line nr="1370" mi="0" ci="10" mb="0" cb="2"/><line nr="1371" mi="0" ci="8" mb="0" cb="2"/><line nr="1372" mi="0" ci="4" mb="0" cb="0"/><line nr="1373" mi="0" ci="13" mb="0" cb="0"/><line nr="1374" mi="0" ci="13" mb="0" cb="0"/><line nr="1375" mi="0" ci="5" mb="0" cb="2"/><line nr="1376" mi="0" ci="5" mb="0" cb="0"/><line nr="1377" mi="0" ci="6" mb="0" cb="0"/><line nr="1378" mi="0" ci="7" mb="0" cb="0"/><line nr="1380" mi="0" ci="4" mb="0" cb="2"/><line nr="1381" mi="0" ci="6" mb="0" cb="0"/><line nr="1383" mi="0" ci="1" mb="0" cb="0"/><line nr="1384" mi="0" ci="1" mb="0" cb="0"/><line nr="1385" mi="0" ci="3" mb="0" cb="0"/><line nr="1414" mi="0" ci="10" mb="0" cb="2"/><line nr="1415" mi="0" ci="8" mb="0" cb="2"/><line nr="1416" mi="0" ci="8" mb="0" cb="2"/><line nr="1417" mi="0" ci="8" mb="0" cb="2"/><line nr="1418" mi="0" ci="5" mb="0" cb="0"/><line nr="1419" mi="0" ci="7" mb="0" cb="2"/><line nr="1420" mi="0" ci="8" mb="0" cb="0"/><line nr="1422" mi="0" ci="2" mb="0" cb="0"/><line nr="1447" mi="0" ci="10" mb="0" cb="2"/><line nr="1448" mi="0" ci="8" mb="0" cb="2"/><line nr="1449" mi="0" ci="8" mb="0" cb="2"/><line nr="1450" mi="0" ci="5" mb="0" cb="0"/><line nr="1451" mi="0" ci="7" mb="0" cb="2"/><line nr="1452" mi="0" ci="7" mb="0" cb="0"/><line nr="1454" mi="0" ci="2" mb="0" cb="0"/><line nr="1479" mi="0" ci="10" mb="0" cb="2"/><line nr="1480" mi="0" ci="8" mb="0" cb="2"/><line nr="1481" mi="0" ci="8" mb="0" cb="2"/><line nr="1482" mi="0" ci="5" mb="0" cb="0"/><line nr="1483" mi="0" ci="7" mb="0" cb="2"/><line nr="1484" mi="0" ci="7" mb="0" cb="0"/><line nr="1486" mi="0" ci="2" mb="0" cb="0"/><line nr="1510" mi="0" ci="10" mb="0" cb="2"/><line nr="1511" mi="0" ci="8" mb="0" cb="2"/><line nr="1512" mi="0" ci="8" mb="0" cb="2"/><line nr="1513" mi="0" ci="5" mb="0" cb="0"/><line nr="1514" mi="0" ci="7" mb="0" cb="2"/><line nr="1515" mi="0" ci="7" mb="0" cb="0"/><line nr="1517" mi="0" ci="2" mb="0" cb="0"/><line nr="1541" mi="0" ci="10" mb="0" cb="2"/><line nr="1542" mi="0" ci="8" mb="0" cb="2"/><line nr="1543" mi="0" ci="8" mb="0" cb="2"/><line nr="1544" mi="0" ci="5" mb="0" cb="0"/><line nr="1545" mi="0" ci="7" mb="0" cb="2"/><line nr="1546" mi="0" ci="7" mb="0" cb="0"/><line nr="1548" mi="0" ci="2" mb="0" cb="0"/><line nr="1572" mi="0" ci="10" mb="0" cb="2"/><line nr="1573" mi="0" ci="8" mb="0" cb="2"/><line nr="1574" mi="0" ci="8" mb="0" cb="2"/><line nr="1575" mi="0" ci="5" mb="0" cb="0"/><line nr="1576" mi="0" ci="7" mb="0" cb="2"/><line nr="1577" mi="0" ci="7" mb="0" cb="0"/><line nr="1579" mi="0" ci="2" mb="0" cb="0"/><line nr="1604" mi="0" ci="10" mb="0" cb="2"/><line nr="1605" mi="0" ci="8" mb="0" cb="2"/><line nr="1606" mi="0" ci="8" mb="0" cb="2"/><line nr="1607" mi="0" ci="5" mb="0" cb="0"/><line nr="1608" mi="0" ci="7" mb="0" cb="2"/><line nr="1609" mi="0" ci="7" mb="0" cb="0"/><line nr="1611" mi="0" ci="2" mb="0" cb="0"/><line nr="1635" mi="0" ci="10" mb="0" cb="2"/><line nr="1636" mi="0" ci="9" mb="0" cb="2"/><line nr="1637" mi="0" ci="8" mb="0" cb="2"/><line nr="1638" mi="0" ci="3" mb="0" cb="0"/><line nr="1639" mi="0" ci="7" mb="0" cb="2"/><line nr="1640" mi="0" ci="7" mb="0" cb="0"/><line nr="1642" mi="0" ci="3" mb="0" cb="0"/><line nr="1673" mi="0" ci="10" mb="0" cb="2"/><line nr="1674" mi="0" ci="9" mb="0" cb="2"/><line nr="1675" mi="0" ci="8" mb="0" cb="2"/><line nr="1676" mi="0" ci="8" mb="0" cb="2"/><line nr="1677" mi="0" ci="5" mb="0" cb="0"/><line nr="1678" mi="0" ci="7" mb="0" cb="2"/><line nr="1679" mi="0" ci="8" mb="0" cb="0"/><line nr="1681" mi="0" ci="2" mb="0" cb="0"/><line nr="1709" mi="0" ci="10" mb="0" cb="2"/><line nr="1710" mi="0" ci="9" mb="0" cb="2"/><line nr="1711" mi="0" ci="8" mb="0" cb="2"/><line nr="1712" mi="0" ci="8" mb="0" cb="2"/><line nr="1713" mi="0" ci="4" mb="0" cb="0"/><line nr="1714" mi="0" ci="14" mb="0" cb="0"/><line nr="1715" mi="0" ci="14" mb="0" cb="0"/><line nr="1716" mi="0" ci="9" mb="0" cb="0"/><line nr="1717" mi="0" ci="1" mb="0" cb="0"/><line nr="1718" mi="0" ci="1" mb="0" cb="0"/><line nr="1719" mi="0" ci="3" mb="0" cb="0"/><line nr="1744" mi="0" ci="10" mb="0" cb="2"/><line nr="1745" mi="0" ci="8" mb="0" cb="2"/><line nr="1746" mi="0" ci="4" mb="0" cb="0"/><line nr="1747" mi="0" ci="14" mb="0" cb="0"/><line nr="1748" mi="0" ci="14" mb="0" cb="0"/><line nr="1749" mi="0" ci="5" mb="0" cb="2"/><line nr="1750" mi="0" ci="10" mb="0" cb="0"/><line nr="1752" mi="0" ci="6" mb="0" cb="0"/><line nr="1754" mi="0" ci="1" mb="0" cb="0"/><line nr="1755" mi="0" ci="1" mb="0" cb="0"/><line nr="1756" mi="0" ci="3" mb="0" cb="0"/><line nr="1781" mi="0" ci="10" mb="0" cb="2"/><line nr="1782" mi="0" ci="8" mb="0" cb="2"/><line nr="1783" mi="0" ci="4" mb="0" cb="0"/><line nr="1784" mi="0" ci="14" mb="0" cb="0"/><line nr="1785" mi="0" ci="14" mb="0" cb="0"/><line nr="1786" mi="0" ci="5" mb="0" cb="2"/><line nr="1787" mi="0" ci="10" mb="0" cb="0"/><line nr="1789" mi="0" ci="6" mb="0" cb="0"/><line nr="1791" mi="0" ci="1" mb="0" cb="0"/><line nr="1792" mi="0" ci="1" mb="0" cb="0"/><line nr="1793" mi="0" ci="3" mb="0" cb="0"/><line nr="1819" mi="0" ci="10" mb="0" cb="2"/><line nr="1820" mi="0" ci="8" mb="0" cb="2"/><line nr="1821" mi="0" ci="4" mb="0" cb="2"/><line nr="1822" mi="0" ci="6" mb="0" cb="0"/><line nr="1824" mi="0" ci="6" mb="0" cb="0"/><line nr="1848" mi="0" ci="10" mb="0" cb="2"/><line nr="1849" mi="0" ci="8" mb="0" cb="2"/><line nr="1850" mi="0" ci="4" mb="0" cb="0"/><line nr="1851" mi="0" ci="14" mb="0" cb="0"/><line nr="1852" mi="0" ci="14" mb="0" cb="0"/><line nr="1853" mi="0" ci="4" mb="0" cb="2"/><line nr="1854" mi="0" ci="10" mb="0" cb="0"/><line nr="1856" mi="0" ci="6" mb="0" cb="0"/><line nr="1858" mi="0" ci="1" mb="0" cb="0"/><line nr="1859" mi="0" ci="1" mb="0" cb="0"/><line nr="1860" mi="0" ci="3" mb="0" cb="0"/><line nr="1884" mi="0" ci="10" mb="0" cb="2"/><line nr="1885" mi="0" ci="8" mb="0" cb="2"/><line nr="1886" mi="0" ci="4" mb="0" cb="0"/><line nr="1887" mi="0" ci="14" mb="0" cb="0"/><line nr="1888" mi="0" ci="14" mb="0" cb="0"/><line nr="1889" mi="0" ci="5" mb="0" cb="0"/><line nr="1890" mi="0" ci="5" mb="0" cb="2"/><line nr="1891" mi="0" ci="6" mb="0" cb="0"/><line nr="1892" mi="0" ci="6" mb="0" cb="0"/><line nr="1894" mi="0" ci="4" mb="0" cb="2"/><line nr="1895" mi="0" ci="6" mb="0" cb="0"/><line nr="1897" mi="0" ci="1" mb="0" cb="0"/><line nr="1898" mi="0" ci="1" mb="0" cb="0"/><line nr="1899" mi="0" ci="3" mb="0" cb="0"/><line nr="1923" mi="0" ci="10" mb="0" cb="2"/><line nr="1924" mi="0" ci="8" mb="0" cb="2"/><line nr="1925" mi="0" ci="4" mb="0" cb="0"/><line nr="1926" mi="0" ci="14" mb="0" cb="0"/><line nr="1927" mi="0" ci="14" mb="0" cb="0"/><line nr="1928" mi="0" ci="5" mb="0" cb="2"/><line nr="1929" mi="0" ci="5" mb="0" cb="0"/><line nr="1930" mi="0" ci="6" mb="0" cb="0"/><line nr="1931" mi="0" ci="7" mb="0" cb="0"/><line nr="1933" mi="0" ci="4" mb="0" cb="2"/><line nr="1934" mi="0" ci="6" mb="0" cb="0"/><line nr="1936" mi="0" ci="1" mb="0" cb="0"/><line nr="1938" mi="0" ci="1" mb="0" cb="0"/><line nr="1939" mi="0" ci="3" mb="0" cb="0"/><line nr="1972" mi="0" ci="10" mb="0" cb="2"/><line nr="1973" mi="0" ci="9" mb="0" cb="2"/><line nr="1974" mi="0" ci="8" mb="0" cb="2"/><line nr="1975" mi="0" ci="8" mb="0" cb="2"/><line nr="1976" mi="0" ci="8" mb="0" cb="2"/><line nr="1977" mi="0" ci="5" mb="0" cb="0"/><line nr="1978" mi="0" ci="7" mb="0" cb="2"/><line nr="1979" mi="0" ci="9" mb="0" cb="0"/><line nr="1981" mi="0" ci="2" mb="0" cb="0"/><line nr="2011" mi="0" ci="10" mb="0" cb="2"/><line nr="2012" mi="0" ci="9" mb="0" cb="2"/><line nr="2013" mi="0" ci="8" mb="0" cb="2"/><line nr="2014" mi="0" ci="8" mb="0" cb="2"/><line nr="2015" mi="0" ci="5" mb="0" cb="0"/><line nr="2016" mi="0" ci="7" mb="0" cb="2"/><line nr="2017" mi="0" ci="8" mb="0" cb="0"/><line nr="2019" mi="0" ci="2" mb="0" cb="0"/><line nr="2049" mi="0" ci="10" mb="0" cb="2"/><line nr="2050" mi="0" ci="9" mb="0" cb="2"/><line nr="2051" mi="0" ci="8" mb="0" cb="2"/><line nr="2052" mi="0" ci="8" mb="0" cb="2"/><line nr="2053" mi="0" ci="5" mb="0" cb="0"/><line nr="2054" mi="0" ci="7" mb="0" cb="2"/><line nr="2055" mi="0" ci="8" mb="0" cb="0"/><line nr="2057" mi="0" ci="2" mb="0" cb="0"/><line nr="2086" mi="0" ci="10" mb="0" cb="2"/><line nr="2087" mi="0" ci="9" mb="0" cb="2"/><line nr="2088" mi="0" ci="8" mb="0" cb="2"/><line nr="2089" mi="0" ci="8" mb="0" cb="2"/><line nr="2090" mi="0" ci="5" mb="0" cb="0"/><line nr="2091" mi="0" ci="7" mb="0" cb="2"/><line nr="2092" mi="0" ci="8" mb="0" cb="0"/><line nr="2094" mi="0" ci="2" mb="0" cb="0"/><line nr="2123" mi="0" ci="10" mb="0" cb="2"/><line nr="2124" mi="0" ci="9" mb="0" cb="2"/><line nr="2125" mi="0" ci="8" mb="0" cb="2"/><line nr="2126" mi="0" ci="8" mb="0" cb="2"/><line nr="2127" mi="0" ci="5" mb="0" cb="0"/><line nr="2128" mi="0" ci="7" mb="0" cb="2"/><line nr="2129" mi="0" ci="8" mb="0" cb="0"/><line nr="2131" mi="0" ci="2" mb="0" cb="0"/><line nr="2160" mi="0" ci="10" mb="0" cb="2"/><line nr="2161" mi="0" ci="9" mb="0" cb="2"/><line nr="2162" mi="0" ci="8" mb="0" cb="2"/><line nr="2163" mi="0" ci="8" mb="0" cb="2"/><line nr="2164" mi="0" ci="5" mb="0" cb="0"/><line nr="2165" mi="0" ci="7" mb="0" cb="2"/><line nr="2166" mi="0" ci="8" mb="0" cb="0"/><line nr="2168" mi="0" ci="2" mb="0" cb="0"/><line nr="2198" mi="0" ci="10" mb="0" cb="2"/><line nr="2199" mi="0" ci="9" mb="0" cb="2"/><line nr="2200" mi="0" ci="8" mb="0" cb="2"/><line nr="2201" mi="0" ci="8" mb="0" cb="2"/><line nr="2202" mi="0" ci="5" mb="0" cb="0"/><line nr="2203" mi="0" ci="7" mb="0" cb="2"/><line nr="2204" mi="0" ci="8" mb="0" cb="0"/><line nr="2206" mi="0" ci="2" mb="0" cb="0"/><line nr="2226" mi="0" ci="10" mb="0" cb="2"/><line nr="2227" mi="0" ci="8" mb="0" cb="2"/><line nr="2228" mi="0" ci="3" mb="0" cb="0"/><line nr="2229" mi="0" ci="7" mb="0" cb="2"/><line nr="2230" mi="0" ci="6" mb="0" cb="0"/><line nr="2232" mi="0" ci="3" mb="0" cb="0"/><line nr="2256" mi="0" ci="10" mb="0" cb="2"/><line nr="2257" mi="0" ci="8" mb="0" cb="2"/><line nr="2258" mi="0" ci="8" mb="0" cb="2"/><line nr="2259" mi="0" ci="5" mb="0" cb="0"/><line nr="2260" mi="0" ci="7" mb="0" cb="2"/><line nr="2261" mi="0" ci="7" mb="0" cb="0"/><line nr="2263" mi="0" ci="2" mb="0" cb="0"/><line nr="2288" mi="0" ci="10" mb="0" cb="2"/><line nr="2289" mi="0" ci="8" mb="0" cb="2"/><line nr="2290" mi="0" ci="8" mb="0" cb="2"/><line nr="2291" mi="0" ci="4" mb="0" cb="0"/><line nr="2292" mi="0" ci="13" mb="0" cb="0"/><line nr="2293" mi="0" ci="13" mb="0" cb="0"/><line nr="2294" mi="0" ci="8" mb="0" cb="0"/><line nr="2295" mi="0" ci="1" mb="0" cb="0"/><line nr="2296" mi="0" ci="1" mb="0" cb="0"/><line nr="2297" mi="0" ci="3" mb="0" cb="0"/><line nr="2318" mi="0" ci="10" mb="0" cb="2"/><line nr="2319" mi="0" ci="8" mb="0" cb="2"/><line nr="2320" mi="0" ci="4" mb="0" cb="0"/><line nr="2321" mi="0" ci="13" mb="0" cb="0"/><line nr="2322" mi="0" ci="13" mb="0" cb="0"/><line nr="2323" mi="0" ci="5" mb="0" cb="2"/><line nr="2324" mi="0" ci="9" mb="0" cb="0"/><line nr="2326" mi="0" ci="6" mb="0" cb="0"/><line nr="2328" mi="0" ci="1" mb="0" cb="0"/><line nr="2329" mi="0" ci="1" mb="0" cb="0"/><line nr="2330" mi="0" ci="3" mb="0" cb="0"/><line nr="2351" mi="0" ci="10" mb="0" cb="2"/><line nr="2352" mi="0" ci="8" mb="0" cb="2"/><line nr="2353" mi="0" ci="4" mb="0" cb="0"/><line nr="2354" mi="0" ci="13" mb="0" cb="0"/><line nr="2355" mi="0" ci="13" mb="0" cb="0"/><line nr="2356" mi="0" ci="5" mb="0" cb="2"/><line nr="2357" mi="0" ci="9" mb="0" cb="0"/><line nr="2359" mi="0" ci="6" mb="0" cb="0"/><line nr="2361" mi="0" ci="1" mb="0" cb="0"/><line nr="2362" mi="0" ci="1" mb="0" cb="0"/><line nr="2363" mi="0" ci="3" mb="0" cb="0"/><line nr="2385" mi="0" ci="10" mb="0" cb="2"/><line nr="2386" mi="0" ci="8" mb="0" cb="2"/><line nr="2387" mi="0" ci="4" mb="0" cb="2"/><line nr="2388" mi="0" ci="5" mb="0" cb="0"/><line nr="2390" mi="0" ci="5" mb="0" cb="0"/><line nr="2410" mi="0" ci="10" mb="0" cb="2"/><line nr="2411" mi="0" ci="8" mb="0" cb="2"/><line nr="2412" mi="0" ci="4" mb="0" cb="0"/><line nr="2413" mi="0" ci="13" mb="0" cb="0"/><line nr="2414" mi="0" ci="13" mb="0" cb="0"/><line nr="2415" mi="0" ci="4" mb="0" cb="2"/><line nr="2416" mi="0" ci="9" mb="0" cb="0"/><line nr="2418" mi="0" ci="6" mb="0" cb="0"/><line nr="2420" mi="0" ci="1" mb="0" cb="0"/><line nr="2421" mi="0" ci="1" mb="0" cb="0"/><line nr="2422" mi="0" ci="3" mb="0" cb="0"/><line nr="2442" mi="0" ci="10" mb="0" cb="2"/><line nr="2443" mi="0" ci="8" mb="0" cb="2"/><line nr="2444" mi="0" ci="4" mb="0" cb="0"/><line nr="2445" mi="0" ci="13" mb="0" cb="0"/><line nr="2446" mi="0" ci="13" mb="0" cb="0"/><line nr="2447" mi="0" ci="4" mb="0" cb="0"/><line nr="2448" mi="0" ci="5" mb="0" cb="2"/><line nr="2449" mi="0" ci="6" mb="0" cb="0"/><line nr="2450" mi="0" ci="6" mb="0" cb="0"/><line nr="2452" mi="0" ci="4" mb="0" cb="2"/><line nr="2453" mi="0" ci="6" mb="0" cb="0"/><line nr="2455" mi="0" ci="1" mb="0" cb="0"/><line nr="2456" mi="0" ci="1" mb="0" cb="0"/><line nr="2457" mi="0" ci="3" mb="0" cb="0"/><line nr="2477" mi="0" ci="10" mb="0" cb="2"/><line nr="2478" mi="0" ci="8" mb="0" cb="2"/><line nr="2479" mi="0" ci="4" mb="0" cb="0"/><line nr="2480" mi="0" ci="13" mb="0" cb="0"/><line nr="2481" mi="0" ci="13" mb="0" cb="0"/><line nr="2482" mi="0" ci="5" mb="0" cb="2"/><line nr="2483" mi="0" ci="4" mb="0" cb="0"/><line nr="2484" mi="0" ci="6" mb="0" cb="0"/><line nr="2485" mi="0" ci="7" mb="0" cb="0"/><line nr="2487" mi="0" ci="4" mb="0" cb="2"/><line nr="2488" mi="0" ci="6" mb="0" cb="0"/><line nr="2490" mi="0" ci="1" mb="0" cb="0"/><line nr="2491" mi="0" ci="1" mb="0" cb="0"/><line nr="2492" mi="0" ci="3" mb="0" cb="0"/><line nr="2522" mi="0" ci="10" mb="0" cb="2"/><line nr="2523" mi="0" ci="8" mb="0" cb="2"/><line nr="2524" mi="0" ci="8" mb="0" cb="2"/><line nr="2525" mi="0" ci="8" mb="0" cb="2"/><line nr="2526" mi="0" ci="5" mb="0" cb="0"/><line nr="2527" mi="0" ci="7" mb="0" cb="2"/><line nr="2528" mi="0" ci="8" mb="0" cb="0"/><line nr="2530" mi="0" ci="2" mb="0" cb="0"/><line nr="2557" mi="0" ci="10" mb="0" cb="2"/><line nr="2558" mi="0" ci="8" mb="0" cb="2"/><line nr="2559" mi="0" ci="8" mb="0" cb="2"/><line nr="2560" mi="0" ci="5" mb="0" cb="0"/><line nr="2561" mi="0" ci="7" mb="0" cb="2"/><line nr="2562" mi="0" ci="7" mb="0" cb="0"/><line nr="2564" mi="0" ci="2" mb="0" cb="0"/><line nr="2591" mi="0" ci="10" mb="0" cb="2"/><line nr="2592" mi="0" ci="8" mb="0" cb="2"/><line nr="2593" mi="0" ci="8" mb="0" cb="2"/><line nr="2594" mi="0" ci="5" mb="0" cb="0"/><line nr="2595" mi="0" ci="7" mb="0" cb="2"/><line nr="2596" mi="0" ci="7" mb="0" cb="0"/><line nr="2598" mi="0" ci="2" mb="0" cb="0"/><line nr="2624" mi="0" ci="10" mb="0" cb="2"/><line nr="2625" mi="0" ci="8" mb="0" cb="2"/><line nr="2626" mi="0" ci="8" mb="0" cb="2"/><line nr="2627" mi="0" ci="5" mb="0" cb="0"/><line nr="2628" mi="0" ci="7" mb="0" cb="2"/><line nr="2629" mi="0" ci="7" mb="0" cb="0"/><line nr="2631" mi="0" ci="2" mb="0" cb="0"/><line nr="2657" mi="0" ci="10" mb="0" cb="2"/><line nr="2658" mi="0" ci="8" mb="0" cb="2"/><line nr="2659" mi="0" ci="8" mb="0" cb="2"/><line nr="2660" mi="0" ci="5" mb="0" cb="0"/><line nr="2661" mi="0" ci="7" mb="0" cb="2"/><line nr="2662" mi="0" ci="7" mb="0" cb="0"/><line nr="2664" mi="0" ci="2" mb="0" cb="0"/><line nr="2690" mi="0" ci="10" mb="0" cb="2"/><line nr="2691" mi="0" ci="8" mb="0" cb="2"/><line nr="2692" mi="0" ci="8" mb="0" cb="2"/><line nr="2693" mi="0" ci="5" mb="0" cb="0"/><line nr="2694" mi="0" ci="7" mb="0" cb="2"/><line nr="2695" mi="0" ci="7" mb="0" cb="0"/><line nr="2697" mi="0" ci="2" mb="0" cb="0"/><line nr="2724" mi="0" ci="10" mb="0" cb="2"/><line nr="2725" mi="0" ci="8" mb="0" cb="2"/><line nr="2726" mi="0" ci="8" mb="0" cb="2"/><line nr="2727" mi="0" ci="5" mb="0" cb="0"/><line nr="2728" mi="0" ci="7" mb="0" cb="2"/><line nr="2729" mi="0" ci="7" mb="0" cb="0"/><line nr="2731" mi="0" ci="2" mb="0" cb="0"/><line nr="2755" mi="0" ci="10" mb="0" cb="2"/><line nr="2756" mi="0" ci="9" mb="0" cb="2"/><line nr="2757" mi="0" ci="8" mb="0" cb="2"/><line nr="2758" mi="0" ci="3" mb="0" cb="0"/><line nr="2759" mi="0" ci="7" mb="0" cb="2"/><line nr="2760" mi="0" ci="7" mb="0" cb="0"/><line nr="2762" mi="0" ci="3" mb="0" cb="0"/><line nr="2790" mi="0" ci="10" mb="0" cb="2"/><line nr="2791" mi="0" ci="9" mb="0" cb="2"/><line nr="2792" mi="0" ci="8" mb="0" cb="2"/><line nr="2793" mi="0" ci="8" mb="0" cb="2"/><line nr="2794" mi="0" ci="5" mb="0" cb="0"/><line nr="2795" mi="0" ci="7" mb="0" cb="2"/><line nr="2796" mi="0" ci="8" mb="0" cb="0"/><line nr="2798" mi="0" ci="2" mb="0" cb="0"/><line nr="2827" mi="0" ci="10" mb="0" cb="2"/><line nr="2828" mi="0" ci="9" mb="0" cb="2"/><line nr="2829" mi="0" ci="8" mb="0" cb="2"/><line nr="2830" mi="0" ci="8" mb="0" cb="2"/><line nr="2831" mi="0" ci="4" mb="0" cb="0"/><line nr="2832" mi="0" ci="14" mb="0" cb="0"/><line nr="2833" mi="0" ci="14" mb="0" cb="0"/><line nr="2834" mi="0" ci="9" mb="0" cb="0"/><line nr="2835" mi="0" ci="1" mb="0" cb="0"/><line nr="2836" mi="0" ci="1" mb="0" cb="0"/><line nr="2837" mi="0" ci="3" mb="0" cb="0"/><line nr="2863" mi="0" ci="10" mb="0" cb="2"/><line nr="2864" mi="0" ci="9" mb="0" cb="2"/><line nr="2865" mi="0" ci="8" mb="0" cb="2"/><line nr="2866" mi="0" ci="4" mb="0" cb="0"/><line nr="2867" mi="0" ci="14" mb="0" cb="0"/><line nr="2868" mi="0" ci="14" mb="0" cb="0"/><line nr="2869" mi="0" ci="5" mb="0" cb="2"/><line nr="2870" mi="0" ci="10" mb="0" cb="0"/><line nr="2872" mi="0" ci="6" mb="0" cb="0"/><line nr="2874" mi="0" ci="1" mb="0" cb="0"/><line nr="2875" mi="0" ci="1" mb="0" cb="0"/><line nr="2876" mi="0" ci="3" mb="0" cb="0"/><line nr="2902" mi="0" ci="10" mb="0" cb="2"/><line nr="2903" mi="0" ci="9" mb="0" cb="2"/><line nr="2904" mi="0" ci="8" mb="0" cb="2"/><line nr="2905" mi="0" ci="4" mb="0" cb="0"/><line nr="2906" mi="0" ci="14" mb="0" cb="0"/><line nr="2907" mi="0" ci="14" mb="0" cb="0"/><line nr="2908" mi="0" ci="5" mb="0" cb="2"/><line nr="2909" mi="0" ci="10" mb="0" cb="0"/><line nr="2911" mi="0" ci="6" mb="0" cb="0"/><line nr="2913" mi="0" ci="1" mb="0" cb="0"/><line nr="2914" mi="0" ci="1" mb="0" cb="0"/><line nr="2915" mi="0" ci="3" mb="0" cb="0"/><line nr="2942" mi="0" ci="10" mb="0" cb="2"/><line nr="2943" mi="0" ci="9" mb="0" cb="2"/><line nr="2944" mi="0" ci="8" mb="0" cb="2"/><line nr="2945" mi="0" ci="4" mb="0" cb="2"/><line nr="2946" mi="0" ci="6" mb="0" cb="0"/><line nr="2948" mi="0" ci="6" mb="0" cb="0"/><line nr="2973" mi="0" ci="10" mb="0" cb="2"/><line nr="2974" mi="0" ci="9" mb="0" cb="2"/><line nr="2975" mi="0" ci="8" mb="0" cb="2"/><line nr="2976" mi="0" ci="4" mb="0" cb="0"/><line nr="2977" mi="0" ci="14" mb="0" cb="0"/><line nr="2978" mi="0" ci="14" mb="0" cb="0"/><line nr="2979" mi="0" ci="4" mb="0" cb="2"/><line nr="2980" mi="0" ci="10" mb="0" cb="0"/><line nr="2982" mi="0" ci="6" mb="0" cb="0"/><line nr="2984" mi="0" ci="1" mb="0" cb="0"/><line nr="2985" mi="0" ci="1" mb="0" cb="0"/><line nr="2986" mi="0" ci="3" mb="0" cb="0"/><line nr="3011" mi="0" ci="10" mb="0" cb="2"/><line nr="3012" mi="0" ci="9" mb="0" cb="2"/><line nr="3013" mi="0" ci="8" mb="0" cb="2"/><line nr="3014" mi="0" ci="4" mb="0" cb="0"/><line nr="3015" mi="0" ci="14" mb="0" cb="0"/><line nr="3016" mi="0" ci="14" mb="0" cb="0"/><line nr="3017" mi="0" ci="5" mb="0" cb="0"/><line nr="3018" mi="0" ci="5" mb="0" cb="2"/><line nr="3019" mi="0" ci="6" mb="0" cb="0"/><line nr="3020" mi="0" ci="6" mb="0" cb="0"/><line nr="3022" mi="0" ci="4" mb="0" cb="2"/><line nr="3023" mi="0" ci="6" mb="0" cb="0"/><line nr="3025" mi="0" ci="1" mb="0" cb="0"/><line nr="3026" mi="0" ci="1" mb="0" cb="0"/><line nr="3027" mi="0" ci="3" mb="0" cb="0"/><line nr="3052" mi="0" ci="10" mb="0" cb="2"/><line nr="3053" mi="0" ci="9" mb="0" cb="2"/><line nr="3054" mi="0" ci="8" mb="0" cb="2"/><line nr="3055" mi="0" ci="4" mb="0" cb="0"/><line nr="3056" mi="0" ci="14" mb="0" cb="0"/><line nr="3057" mi="0" ci="14" mb="0" cb="0"/><line nr="3058" mi="0" ci="5" mb="0" cb="2"/><line nr="3059" mi="0" ci="5" mb="0" cb="0"/><line nr="3060" mi="0" ci="6" mb="0" cb="0"/><line nr="3061" mi="0" ci="7" mb="0" cb="0"/><line nr="3063" mi="0" ci="4" mb="0" cb="2"/><line nr="3064" mi="0" ci="6" mb="0" cb="0"/><line nr="3066" mi="0" ci="1" mb="0" cb="0"/><line nr="3067" mi="0" ci="1" mb="0" cb="0"/><line nr="3068" mi="0" ci="3" mb="0" cb="0"/><line nr="3102" mi="0" ci="10" mb="0" cb="2"/><line nr="3103" mi="0" ci="9" mb="0" cb="2"/><line nr="3104" mi="0" ci="8" mb="0" cb="2"/><line nr="3105" mi="0" ci="8" mb="0" cb="2"/><line nr="3106" mi="0" ci="8" mb="0" cb="2"/><line nr="3107" mi="0" ci="5" mb="0" cb="0"/><line nr="3108" mi="0" ci="7" mb="0" cb="2"/><line nr="3109" mi="0" ci="9" mb="0" cb="0"/><line nr="3111" mi="0" ci="2" mb="0" cb="0"/><line nr="3142" mi="0" ci="10" mb="0" cb="2"/><line nr="3143" mi="0" ci="9" mb="0" cb="2"/><line nr="3144" mi="0" ci="8" mb="0" cb="2"/><line nr="3145" mi="0" ci="8" mb="0" cb="2"/><line nr="3146" mi="0" ci="5" mb="0" cb="0"/><line nr="3147" mi="0" ci="7" mb="0" cb="2"/><line nr="3148" mi="0" ci="8" mb="0" cb="0"/><line nr="3150" mi="0" ci="2" mb="0" cb="0"/><line nr="3181" mi="0" ci="10" mb="0" cb="2"/><line nr="3182" mi="0" ci="9" mb="0" cb="2"/><line nr="3183" mi="0" ci="8" mb="0" cb="2"/><line nr="3184" mi="0" ci="8" mb="0" cb="2"/><line nr="3185" mi="0" ci="5" mb="0" cb="0"/><line nr="3186" mi="0" ci="7" mb="0" cb="2"/><line nr="3187" mi="0" ci="8" mb="0" cb="0"/><line nr="3189" mi="0" ci="2" mb="0" cb="0"/><line nr="3219" mi="0" ci="10" mb="0" cb="2"/><line nr="3220" mi="0" ci="9" mb="0" cb="2"/><line nr="3221" mi="0" ci="8" mb="0" cb="2"/><line nr="3222" mi="0" ci="8" mb="0" cb="2"/><line nr="3223" mi="0" ci="5" mb="0" cb="0"/><line nr="3224" mi="0" ci="7" mb="0" cb="2"/><line nr="3225" mi="0" ci="8" mb="0" cb="0"/><line nr="3227" mi="0" ci="2" mb="0" cb="0"/><line nr="3257" mi="0" ci="10" mb="0" cb="2"/><line nr="3258" mi="0" ci="9" mb="0" cb="2"/><line nr="3259" mi="0" ci="8" mb="0" cb="2"/><line nr="3260" mi="0" ci="8" mb="0" cb="2"/><line nr="3261" mi="0" ci="5" mb="0" cb="0"/><line nr="3262" mi="0" ci="7" mb="0" cb="2"/><line nr="3263" mi="0" ci="8" mb="0" cb="0"/><line nr="3265" mi="0" ci="2" mb="0" cb="0"/><line nr="3295" mi="0" ci="10" mb="0" cb="2"/><line nr="3296" mi="0" ci="9" mb="0" cb="2"/><line nr="3297" mi="0" ci="8" mb="0" cb="2"/><line nr="3298" mi="0" ci="8" mb="0" cb="2"/><line nr="3299" mi="0" ci="5" mb="0" cb="0"/><line nr="3300" mi="0" ci="7" mb="0" cb="2"/><line nr="3301" mi="0" ci="8" mb="0" cb="0"/><line nr="3303" mi="0" ci="2" mb="0" cb="0"/><line nr="3333" mi="0" ci="10" mb="0" cb="2"/><line nr="3334" mi="0" ci="9" mb="0" cb="2"/><line nr="3335" mi="0" ci="8" mb="0" cb="2"/><line nr="3336" mi="0" ci="8" mb="0" cb="2"/><line nr="3337" mi="0" ci="5" mb="0" cb="0"/><line nr="3338" mi="0" ci="7" mb="0" cb="2"/><line nr="3339" mi="0" ci="8" mb="0" cb="0"/><line nr="3341" mi="0" ci="2" mb="0" cb="0"/><line nr="3346" mi="0" ci="8" mb="0" cb="0"/><line nr="3351" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="5398"/><counter type="BRANCH" missed="6" covered="742"/><counter type="LINE" missed="3" covered="809"/><counter type="COMPLEXITY" missed="6" covered="525"/><counter type="METHOD" missed="0" covered="157"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SquareRootCalculator.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="14" mb="0" cb="4"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="2"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="14" mb="0" cb="4"/><line nr="148" mi="0" ci="8" mb="0" cb="2"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="11" mb="0" cb="2"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="1" ci="10" mb="1" cb="1"/><line nr="191" mi="0" ci="9" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="1" ci="10" mb="1" cb="1"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="1" ci="10" mb="1" cb="1"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="12" mb="0" cb="2"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="2"/><line nr="249" mi="0" ci="8" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="1" cb="1"/><line nr="264" mi="1" ci="13" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="2"/><line nr="273" mi="0" ci="10" mb="0" cb="0"/><line nr="275" mi="0" ci="10" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="2"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="297" mi="0" ci="14" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="436"/><counter type="BRANCH" missed="4" covered="26"/><counter type="LINE" missed="0" covered="88"/><counter type="COMPLEXITY" missed="4" covered="28"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="15" covered="5834"/><counter type="BRANCH" missed="10" covered="768"/><counter type="LINE" missed="3" covered="897"/><counter type="COMPLEXITY" missed="10" covered="553"/><counter type="METHOD" missed="0" covered="174"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="132" covered="16782"/><counter type="BRANCH" missed="37" covered="1631"/><counter type="LINE" missed="21" covered="2610"/><counter type="COMPLEXITY" missed="38" covered="1431"/><counter type="METHOD" missed="4" covered="631"/><counter type="CLASS" missed="0" covered="29"/></report>