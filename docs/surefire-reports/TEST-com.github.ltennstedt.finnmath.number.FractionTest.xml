<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.github.ltennstedt.finnmath.number.FractionTest" time="1.195" tests="91" errors="0" skipped="0" failures="0">
  <properties>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/raimund/git/finnmath/target/test-classes:/home/raimund/git/finnmath/target/classes:/home/raimund/.m2/repository/com/google/guava/guava/23.2-jre/guava-23.2-jre.jar:/home/raimund/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/raimund/.m2/repository/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/home/raimund/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/raimund/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/raimund/.m2/repository/org/apache/commons/commons-lang3/3.6/commons-lang3-3.6.jar:/home/raimund/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/raimund/.m2/repository/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar:/home/raimund/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/raimund/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/raimund/.m2/repository/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar:/home/raimund/.m2/repository/org/assertj/assertj-guava/3.1.0/assertj-guava-3.1.0.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Linux"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk/jre/lib/amd64"/>
    <property name="sun.java.command" value="/home/raimund/git/finnmath/target/surefire/surefirebooter9079258990144707742.jar /home/raimund/git/finnmath/target/surefire 2017-11-01T16-21-48_111-jvmRun1 surefire988001320110709264tmp surefire_06714070986443569134tmp"/>
    <property name="surefire.test.class.path" value="/home/raimund/git/finnmath/target/test-classes:/home/raimund/git/finnmath/target/classes:/home/raimund/.m2/repository/com/google/guava/guava/23.2-jre/guava-23.2-jre.jar:/home/raimund/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/raimund/.m2/repository/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/home/raimund/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/home/raimund/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/home/raimund/.m2/repository/org/apache/commons/commons-lang3/3.6/commons-lang3-3.6.jar:/home/raimund/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/home/raimund/.m2/repository/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar:/home/raimund/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/raimund/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/raimund/.m2/repository/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar:/home/raimund/.m2/repository/org/assertj/assertj-guava/3.1.0/assertj-guava-3.1.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/raimund"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk/jre"/>
    <property name="basedir" value="/home/raimund/git/finnmath"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/home/raimund/git/finnmath/target/surefire/surefirebooter9079258990144707742.jar:/home/raimund/.m2/repository/org/jacoco/org.jacoco.agent/0.7.9/org.jacoco.agent-0.7.9-runtime.jar"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk/jre/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_144-b01"/>
    <property name="user.name" value="raimund"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="4.13.9-1-ARCH"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk/jre/lib/endorsed"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/home/raimund/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="1.8.0_144"/>
    <property name="user.dir" value="/home/raimund/git/finnmath"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.144-b01"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="greaterThanOrEqualToNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.32"/>
  <testcase name="addShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.03"/>
  <testcase name="subtractShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.009"/>
  <testcase name="toStringShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.018"/>
  <testcase name="intValueShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.008"/>
  <testcase name="newDenominatorZeroShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.01"/>
  <testcase name="powZeroShouldBeSameAsOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="divideShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.023"/>
  <testcase name="subtractZeroShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="compareToGreaterShouldReturnMinusOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="reduceZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="absMinusOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="invertSelfShouldBeEqualToOneDividedBySelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="divideMinusOneShouldBeEqualToNegated" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="normalizeShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.018"/>
  <testcase name="minShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="multiplyInvertedShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equivalentShouldBeTransitive" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.057"/>
  <testcase name="maxShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="normalizeZeroShouldBeTheSame" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="divideNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equalsNumeratorNotEqualShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="signumMinusOneShouldBeEqualToMinusOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="powOfZeroForExponentNotEqualToZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="greaterThanOrEqualToShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="multiplyShouldBeCommutative" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.008"/>
  <testcase name="powNegativeExponentShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="multiplyNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equalsDenominatorNotEqualShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.005"/>
  <testcase name="normalizeOneShouldBeTheSame" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="signumOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equalsSelfShouldReturnTrue" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="greaterThanShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="addShouldBeCommutative" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.006"/>
  <testcase name="greaterThanNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="multiplyShouldBeAssociative" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.031"/>
  <testcase name="divideOneShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="absZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="invertZeroShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="equalsEqualShouldReturnTrue" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="absOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="addNegatedShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="hashCodeShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="addShouldBeAssociative" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.016"/>
  <testcase name="negateTwiceShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="absShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="minNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="invertShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="addAndMultiplyShouldBeDistributive" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.016"/>
  <testcase name="newNumeratorNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="newShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="newDenominatorNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="subtractSelfShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="longValueShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="equivalentShouldBeReflexive" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.006"/>
  <testcase name="maxNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="divideZeroShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="addNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="powOneShouldBeTheSame" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="invertibleZeroShouldBeFalse" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="invertTwiceShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="addZeroShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="equalsNotFractionShouldReturnFalse" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="multiplyShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="lessThanOrEqualToShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="multiplyOneShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="invertibleShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="invertibleShouldBePredictable" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="negateZeroShouldBeEqualToSelf" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="invertOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="equivalentShouldBeSymmetric" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="lessThanShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="reduceShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="signumZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="compareToEqualShouldReturnZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="signumShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="powShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="multiplyMinusOneShouldBeEqualToNegated" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="lessThanOrEqualToNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="subtractNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="multiplyZeroShouldBeEqualToZero" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="equivalentShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.003"/>
  <testcase name="floatValueShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.006"/>
  <testcase name="negateShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="powOfOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="doubleValueShouldSucceed" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.006"/>
  <testcase name="compareToNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.001"/>
  <testcase name="equivalentNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.002"/>
  <testcase name="compareToLowerShouldReturnMinusOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0.004"/>
  <testcase name="reduceOneShouldBeEqualToOne" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
  <testcase name="lessThanNullShouldThrowException" classname="com.github.ltennstedt.finnmath.number.FractionTest" time="0"/>
</testsuite>